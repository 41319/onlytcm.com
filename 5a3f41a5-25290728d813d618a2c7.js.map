{"version":3,"file":"5a3f41a5-25290728d813d618a2c7.js","mappings":"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","sources":["webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/@reactflow/core/dist/esm/index.js"],"sourcesContent":["import { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { createContext, useContext, useMemo, memo, useRef, useState, useEffect, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport { useStoreWithEqualityFn, createWithEqualityFn } from 'zustand/traditional';\nimport { shallow } from 'zustand/shallow';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { select, pointer } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport { createPortal } from 'react-dom';\n\nconst StoreContext = createContext(null);\nconst Provider$1 = StoreContext.Provider;\n\nconst errorMessages = {\n    error001: () => '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001',\n    error002: () => \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\",\n    error003: (nodeType) => `Node type \"${nodeType}\" not found. Using fallback type \"default\".`,\n    error004: () => 'The React Flow parent container needs a width and a height to render the graph.',\n    error005: () => 'Only child nodes can use a parent extent.',\n    error006: () => \"Can't create edge. An edge needs a source and a target.\",\n    error007: (id) => `The old edge with id=${id} does not exist.`,\n    error009: (type) => `Marker type \"${type}\" doesn't exist.`,\n    error008: (sourceHandle, edge) => `Couldn't create edge for ${!sourceHandle ? 'source' : 'target'} handle id: \"${!sourceHandle ? edge.sourceHandle : edge.targetHandle}\", edge id: ${edge.id}.`,\n    error010: () => 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.',\n    error011: (edgeType) => `Edge type \"${edgeType}\" not found. Using fallback type \"default\".`,\n    error012: (id) => `Node with id \"${id}\" does not exist, it may have been removed. This can happen when a node is deleted before the \"onNodeClick\" handler is called.`,\n};\n\nconst zustandErrorMessage = errorMessages['error001']();\nfunction useStore(selector, equalityFn) {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useStoreWithEqualityFn(store, selector, equalityFn);\n}\nconst useStoreApi = () => {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useMemo(() => ({\n        getState: store.getState,\n        setState: store.setState,\n        subscribe: store.subscribe,\n        destroy: store.destroy,\n    }), [store]);\n};\n\nconst selector$g = (s) => (s.userSelectionActive ? 'none' : 'all');\nfunction Panel({ position, children, className, style, ...rest }) {\n    const pointerEvents = useStore(selector$g);\n    const positionClasses = `${position}`.split('-');\n    return (jsx(\"div\", { className: cc(['react-flow__panel', className, ...positionClasses]), style: { ...style, pointerEvents }, ...rest, children: children }));\n}\n\nfunction Attribution({ proOptions, position = 'bottom-right' }) {\n    if (proOptions?.hideAttribution) {\n        return null;\n    }\n    return (jsx(Panel, { position: position, className: \"react-flow__attribution\", \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev\", children: jsx(\"a\", { href: \"https://reactflow.dev\", target: \"_blank\", rel: \"noopener noreferrer\", \"aria-label\": \"React Flow attribution\", children: \"React Flow\" }) }));\n}\n\nconst EdgeText = ({ x, y, label, labelStyle = {}, labelShowBg = true, labelBgStyle = {}, labelBgPadding = [2, 4], labelBgBorderRadius = 2, children, className, ...rest }) => {\n    const edgeRef = useRef(null);\n    const [edgeTextBbox, setEdgeTextBbox] = useState({ x: 0, y: 0, width: 0, height: 0 });\n    const edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n    useEffect(() => {\n        if (edgeRef.current) {\n            const textBbox = edgeRef.current.getBBox();\n            setEdgeTextBbox({\n                x: textBbox.x,\n                y: textBbox.y,\n                width: textBbox.width,\n                height: textBbox.height,\n            });\n        }\n    }, [label]);\n    if (typeof label === 'undefined' || !label) {\n        return null;\n    }\n    return (jsxs(\"g\", { transform: `translate(${x - edgeTextBbox.width / 2} ${y - edgeTextBbox.height / 2})`, className: edgeTextClasses, visibility: edgeTextBbox.width ? 'visible' : 'hidden', ...rest, children: [labelShowBg && (jsx(\"rect\", { width: edgeTextBbox.width + 2 * labelBgPadding[0], x: -labelBgPadding[0], y: -labelBgPadding[1], height: edgeTextBbox.height + 2 * labelBgPadding[1], className: \"react-flow__edge-textbg\", style: labelBgStyle, rx: labelBgBorderRadius, ry: labelBgBorderRadius })), jsx(\"text\", { className: \"react-flow__edge-text\", y: edgeTextBbox.height / 2, dy: \"0.3em\", ref: edgeRef, style: labelStyle, children: label }), children] }));\n};\nvar EdgeText$1 = memo(EdgeText);\n\nconst getDimensions = (node) => ({\n    width: node.offsetWidth,\n    height: node.offsetHeight,\n});\nconst clamp = (val, min = 0, max = 1) => Math.min(Math.max(val, min), max);\nconst clampPosition = (position = { x: 0, y: 0 }, extent) => ({\n    x: clamp(position.x, extent[0][0], extent[1][0]),\n    y: clamp(position.y, extent[0][1], extent[1][1]),\n});\n// returns a number between 0 and 1 that represents the velocity of the movement\n// when the mouse is close to the edge of the canvas\nconst calcAutoPanVelocity = (value, min, max) => {\n    if (value < min) {\n        return clamp(Math.abs(value - min), 1, 50) / 50;\n    }\n    else if (value > max) {\n        return -clamp(Math.abs(value - max), 1, 50) / 50;\n    }\n    return 0;\n};\nconst calcAutoPan = (pos, bounds) => {\n    const xMovement = calcAutoPanVelocity(pos.x, 35, bounds.width - 35) * 20;\n    const yMovement = calcAutoPanVelocity(pos.y, 35, bounds.height - 35) * 20;\n    return [xMovement, yMovement];\n};\nconst getHostForElement = (element) => element.getRootNode?.() || window?.document;\nconst getBoundsOfBoxes = (box1, box2) => ({\n    x: Math.min(box1.x, box2.x),\n    y: Math.min(box1.y, box2.y),\n    x2: Math.max(box1.x2, box2.x2),\n    y2: Math.max(box1.y2, box2.y2),\n});\nconst rectToBox = ({ x, y, width, height }) => ({\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n});\nconst boxToRect = ({ x, y, x2, y2 }) => ({\n    x,\n    y,\n    width: x2 - x,\n    height: y2 - y,\n});\nconst nodeToRect = (node) => ({\n    ...(node.positionAbsolute || { x: 0, y: 0 }),\n    width: node.width || 0,\n    height: node.height || 0,\n});\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\nconst getOverlappingArea = (rectA, rectB) => {\n    const xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n    const yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n    return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isRectObject = (obj) => isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nconst isNumeric = (n) => !isNaN(n) && isFinite(n);\nconst internalsSymbol = Symbol.for('internals');\n// used for a11y key board controls for nodes and edges\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\nconst devWarn = (id, message) => {\n    if (process.env.NODE_ENV === 'development') {\n        console.warn(`[React Flow]: ${message} Help: https://reactflow.dev/error#${id}`);\n    }\n};\nconst isReactKeyboardEvent = (event) => 'nativeEvent' in event;\nfunction isInputDOMNode(event) {\n    const kbEvent = isReactKeyboardEvent(event) ? event.nativeEvent : event;\n    // using composed path for handling shadow dom\n    const target = (kbEvent.composedPath?.()?.[0] || event.target);\n    const isInput = ['INPUT', 'SELECT', 'TEXTAREA'].includes(target?.nodeName) || target?.hasAttribute('contenteditable');\n    // when an input field is focused we don't want to trigger deletion or movement of nodes\n    return isInput || !!target?.closest('.nokey');\n}\nconst isMouseEvent = (event) => 'clientX' in event;\nconst getEventPosition = (event, bounds) => {\n    const isMouseTriggered = isMouseEvent(event);\n    const evtX = isMouseTriggered ? event.clientX : event.touches?.[0].clientX;\n    const evtY = isMouseTriggered ? event.clientY : event.touches?.[0].clientY;\n    return {\n        x: evtX - (bounds?.left ?? 0),\n        y: evtY - (bounds?.top ?? 0),\n    };\n};\nconst isMacOs = () => typeof navigator !== 'undefined' && navigator?.userAgent?.indexOf('Mac') >= 0;\n\nconst BaseEdge = ({ id, path, labelX, labelY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth = 20, }) => {\n    return (jsxs(Fragment, { children: [jsx(\"path\", { id: id, style: style, d: path, fill: \"none\", className: \"react-flow__edge-path\", markerEnd: markerEnd, markerStart: markerStart }), interactionWidth && (jsx(\"path\", { d: path, fill: \"none\", strokeOpacity: 0, strokeWidth: interactionWidth, className: \"react-flow__edge-interaction\" })), label && isNumeric(labelX) && isNumeric(labelY) ? (jsx(EdgeText$1, { x: labelX, y: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius })) : null] }));\n};\nBaseEdge.displayName = 'BaseEdge';\n\nconst getMarkerEnd = (markerType, markerEndId) => {\n    if (typeof markerEndId !== 'undefined' && markerEndId) {\n        return `url(#${markerEndId})`;\n    }\n    return typeof markerType !== 'undefined' ? `url(#react-flow__${markerType})` : 'none';\n};\nfunction getMouseHandler$1(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const edge = getState().edges.find((e) => e.id === id);\n            if (edge) {\n                handler(event, { ...edge });\n            }\n        };\n}\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter({ sourceX, sourceY, targetX, targetY, }) {\n    const xOffset = Math.abs(targetX - sourceX) / 2;\n    const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n    const yOffset = Math.abs(targetY - sourceY) / 2;\n    const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n    return [centerX, centerY, xOffset, yOffset];\n}\nfunction getBezierEdgeCenter({ sourceX, sourceY, targetX, targetY, sourceControlX, sourceControlY, targetControlX, targetControlY, }) {\n    // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n    // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n    const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n    const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n    const offsetX = Math.abs(centerX - sourceX);\n    const offsetY = Math.abs(centerY - sourceY);\n    return [centerX, centerY, offsetX, offsetY];\n}\n\nvar ConnectionMode;\n(function (ConnectionMode) {\n    ConnectionMode[\"Strict\"] = \"strict\";\n    ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n    PanOnScrollMode[\"Free\"] = \"free\";\n    PanOnScrollMode[\"Vertical\"] = \"vertical\";\n    PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n    SelectionMode[\"Partial\"] = \"partial\";\n    SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\n\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n    ConnectionLineType[\"Bezier\"] = \"default\";\n    ConnectionLineType[\"Straight\"] = \"straight\";\n    ConnectionLineType[\"Step\"] = \"step\";\n    ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n    ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n    MarkerType[\"Arrow\"] = \"arrow\";\n    MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\n\nvar Position;\n(function (Position) {\n    Position[\"Left\"] = \"left\";\n    Position[\"Top\"] = \"top\";\n    Position[\"Right\"] = \"right\";\n    Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\n\nfunction getControl({ pos, x1, y1, x2, y2 }) {\n    if (pos === Position.Left || pos === Position.Right) {\n        return [0.5 * (x1 + x2), y1];\n    }\n    return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, }) {\n    const [sourceControlX, sourceControlY] = getControl({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n    });\n    const [targetControlX, targetControlY] = getControl({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst SimpleBezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSimpleBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\n\nconst handleDirections = {\n    [Position.Left]: { x: -1, y: 0 },\n    [Position.Right]: { x: 1, y: 0 },\n    [Position.Top]: { x: 0, y: -1 },\n    [Position.Bottom]: { x: 0, y: 1 },\n};\nconst getDirection = ({ source, sourcePosition = Position.Bottom, target, }) => {\n    if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n        return source.x < target.x ? { x: 1, y: 0 } : { x: -1, y: 0 };\n    }\n    return source.y < target.y ? { x: 0, y: 1 } : { x: 0, y: -1 };\n};\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints({ source, sourcePosition = Position.Bottom, target, targetPosition = Position.Top, center, offset, }) {\n    const sourceDir = handleDirections[sourcePosition];\n    const targetDir = handleDirections[targetPosition];\n    const sourceGapped = { x: source.x + sourceDir.x * offset, y: source.y + sourceDir.y * offset };\n    const targetGapped = { x: target.x + targetDir.x * offset, y: target.y + targetDir.y * offset };\n    const dir = getDirection({\n        source: sourceGapped,\n        sourcePosition,\n        target: targetGapped,\n    });\n    const dirAccessor = dir.x !== 0 ? 'x' : 'y';\n    const currDir = dir[dirAccessor];\n    let points = [];\n    let centerX, centerY;\n    const sourceGapOffset = { x: 0, y: 0 };\n    const targetGapOffset = { x: 0, y: 0 };\n    const [defaultCenterX, defaultCenterY, defaultOffsetX, defaultOffsetY] = getEdgeCenter({\n        sourceX: source.x,\n        sourceY: source.y,\n        targetX: target.x,\n        targetY: target.y,\n    });\n    // opposite handle positions, default case\n    if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n        centerX = center.x || defaultCenterX;\n        centerY = center.y || defaultCenterY;\n        //    --->\n        //    |\n        // >---\n        const verticalSplit = [\n            { x: centerX, y: sourceGapped.y },\n            { x: centerX, y: targetGapped.y },\n        ];\n        //    |\n        //  ---\n        //  |\n        const horizontalSplit = [\n            { x: sourceGapped.x, y: centerY },\n            { x: targetGapped.x, y: centerY },\n        ];\n        if (sourceDir[dirAccessor] === currDir) {\n            points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n        }\n        else {\n            points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n        }\n    }\n    else {\n        // sourceTarget means we take x from source and y from target, targetSource is the opposite\n        const sourceTarget = [{ x: sourceGapped.x, y: targetGapped.y }];\n        const targetSource = [{ x: targetGapped.x, y: sourceGapped.y }];\n        // this handles edges with same handle positions\n        if (dirAccessor === 'x') {\n            points = sourceDir.x === currDir ? targetSource : sourceTarget;\n        }\n        else {\n            points = sourceDir.y === currDir ? sourceTarget : targetSource;\n        }\n        if (sourcePosition === targetPosition) {\n            const diff = Math.abs(source[dirAccessor] - target[dirAccessor]);\n            // if an edge goes from right to right for example (sourcePosition === targetPosition) and the distance between source.x and target.x is less than the offset, the added point and the gapped source/target will overlap. This leads to a weird edge path. To avoid this we add a gapOffset to the source/target\n            if (diff <= offset) {\n                const gapOffset = Math.min(offset - 1, offset - diff);\n                if (sourceDir[dirAccessor] === currDir) {\n                    sourceGapOffset[dirAccessor] = (sourceGapped[dirAccessor] > source[dirAccessor] ? -1 : 1) * gapOffset;\n                }\n                else {\n                    targetGapOffset[dirAccessor] = (targetGapped[dirAccessor] > target[dirAccessor] ? -1 : 1) * gapOffset;\n                }\n            }\n        }\n        // these are conditions for handling mixed handle positions like Right -> Bottom for example\n        if (sourcePosition !== targetPosition) {\n            const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n            const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n            const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n            const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n            const flipSourceTarget = (sourceDir[dirAccessor] === 1 && ((!isSameDir && sourceGtTargetOppo) || (isSameDir && sourceLtTargetOppo))) ||\n                (sourceDir[dirAccessor] !== 1 && ((!isSameDir && sourceLtTargetOppo) || (isSameDir && sourceGtTargetOppo)));\n            if (flipSourceTarget) {\n                points = dirAccessor === 'x' ? sourceTarget : targetSource;\n            }\n        }\n        const sourceGapPoint = { x: sourceGapped.x + sourceGapOffset.x, y: sourceGapped.y + sourceGapOffset.y };\n        const targetGapPoint = { x: targetGapped.x + targetGapOffset.x, y: targetGapped.y + targetGapOffset.y };\n        const maxXDistance = Math.max(Math.abs(sourceGapPoint.x - points[0].x), Math.abs(targetGapPoint.x - points[0].x));\n        const maxYDistance = Math.max(Math.abs(sourceGapPoint.y - points[0].y), Math.abs(targetGapPoint.y - points[0].y));\n        // we want to place the label on the longest segment of the edge\n        if (maxXDistance >= maxYDistance) {\n            centerX = (sourceGapPoint.x + targetGapPoint.x) / 2;\n            centerY = points[0].y;\n        }\n        else {\n            centerX = points[0].x;\n            centerY = (sourceGapPoint.y + targetGapPoint.y) / 2;\n        }\n    }\n    const pathPoints = [\n        source,\n        { x: sourceGapped.x + sourceGapOffset.x, y: sourceGapped.y + sourceGapOffset.y },\n        ...points,\n        { x: targetGapped.x + targetGapOffset.x, y: targetGapped.y + targetGapOffset.y },\n        target,\n    ];\n    return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n    const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n    const { x, y } = b;\n    // no bend\n    if ((a.x === x && x === c.x) || (a.y === y && y === c.y)) {\n        return `L${x} ${y}`;\n    }\n    // first segment is horizontal\n    if (a.y === y) {\n        const xDir = a.x < c.x ? -1 : 1;\n        const yDir = a.y < c.y ? 1 : -1;\n        return `L ${x + bendSize * xDir},${y}Q ${x},${y} ${x},${y + bendSize * yDir}`;\n    }\n    const xDir = a.x < c.x ? 1 : -1;\n    const yDir = a.y < c.y ? -1 : 1;\n    return `L ${x},${y + bendSize * yDir}Q ${x},${y} ${x + bendSize * xDir},${y}`;\n}\nfunction getSmoothStepPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, borderRadius = 5, centerX, centerY, offset = 20, }) {\n    const [points, labelX, labelY, offsetX, offsetY] = getPoints({\n        source: { x: sourceX, y: sourceY },\n        sourcePosition,\n        target: { x: targetX, y: targetY },\n        targetPosition,\n        center: { x: centerX, y: centerY },\n        offset,\n    });\n    const path = points.reduce((res, p, i) => {\n        let segment = '';\n        if (i > 0 && i < points.length - 1) {\n            segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n        }\n        else {\n            segment = `${i === 0 ? 'M' : 'L'}${p.x} ${p.y}`;\n        }\n        res += segment;\n        return res;\n    }, '');\n    return [path, labelX, labelY, offsetX, offsetY];\n}\nconst SmoothStepEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, sourcePosition = Position.Bottom, targetPosition = Position.Top, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSmoothStepPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        borderRadius: pathOptions?.borderRadius,\n        offset: pathOptions?.offset,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSmoothStepEdge.displayName = 'SmoothStepEdge';\n\nconst StepEdge = memo((props) => (jsx(SmoothStepEdge, { ...props, pathOptions: useMemo(() => ({ borderRadius: 0, offset: props.pathOptions?.offset }), [props.pathOptions?.offset]) })));\nStepEdge.displayName = 'StepEdge';\n\nfunction getStraightPath({ sourceX, sourceY, targetX, targetY, }) {\n    const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n    });\n    return [`M ${sourceX},${sourceY}L ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst StraightEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getStraightPath({ sourceX, sourceY, targetX, targetY });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nStraightEdge.displayName = 'StraightEdge';\n\nfunction calculateControlOffset(distance, curvature) {\n    if (distance >= 0) {\n        return 0.5 * distance;\n    }\n    return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature({ pos, x1, y1, x2, y2, c }) {\n    switch (pos) {\n        case Position.Left:\n            return [x1 - calculateControlOffset(x1 - x2, c), y1];\n        case Position.Right:\n            return [x1 + calculateControlOffset(x2 - x1, c), y1];\n        case Position.Top:\n            return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n        case Position.Bottom:\n            return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n    }\n}\nfunction getBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, curvature = 0.25, }) {\n    const [sourceControlX, sourceControlY] = getControlWithCurvature({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n        c: curvature,\n    });\n    const [targetControlX, targetControlY] = getControlWithCurvature({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n        c: curvature,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst BezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        curvature: pathOptions?.curvature,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nBezierEdge.displayName = 'BezierEdge';\n\nconst NodeIdContext = createContext(null);\nconst Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nconst useNodeId = () => {\n    const nodeId = useContext(NodeIdContext);\n    return nodeId;\n};\n\nconst isEdge = (element) => 'id' in element && 'source' in element && 'target' in element;\nconst isNode = (element) => 'id' in element && !('source' in element) && !('target' in element);\nconst getOutgoers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const outgoerIds = edges.filter((e) => e.source === node.id).map((e) => e.target);\n    return nodes.filter((n) => outgoerIds.includes(n.id));\n};\nconst getIncomers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const incomersIds = edges.filter((e) => e.target === node.id).map((e) => e.source);\n    return nodes.filter((n) => incomersIds.includes(n.id));\n};\nconst getEdgeId = ({ source, sourceHandle, target, targetHandle }) => `reactflow__edge-${source}${sourceHandle || ''}-${target}${targetHandle || ''}`;\nconst getMarkerId = (marker, rfId) => {\n    if (typeof marker === 'undefined') {\n        return '';\n    }\n    if (typeof marker === 'string') {\n        return marker;\n    }\n    const idPrefix = rfId ? `${rfId}__` : '';\n    return `${idPrefix}${Object.keys(marker)\n        .sort()\n        .map((key) => `${key}=${marker[key]}`)\n        .join('&')}`;\n};\nconst connectionExists = (edge, edges) => {\n    return edges.some((el) => el.source === edge.source &&\n        el.target === edge.target &&\n        (el.sourceHandle === edge.sourceHandle || (!el.sourceHandle && !edge.sourceHandle)) &&\n        (el.targetHandle === edge.targetHandle || (!el.targetHandle && !edge.targetHandle)));\n};\nconst addEdge = (edgeParams, edges) => {\n    if (!edgeParams.source || !edgeParams.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    let edge;\n    if (isEdge(edgeParams)) {\n        edge = { ...edgeParams };\n    }\n    else {\n        edge = {\n            ...edgeParams,\n            id: getEdgeId(edgeParams),\n        };\n    }\n    if (connectionExists(edge, edges)) {\n        return edges;\n    }\n    return edges.concat(edge);\n};\nconst updateEdge = (oldEdge, newConnection, edges, options = { shouldReplaceId: true }) => {\n    const { id: oldEdgeId, ...rest } = oldEdge;\n    if (!newConnection.source || !newConnection.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    const foundEdge = edges.find((e) => e.id === oldEdgeId);\n    if (!foundEdge) {\n        devWarn('007', errorMessages['error007'](oldEdgeId));\n        return edges;\n    }\n    // Remove old edge and create the new edge with parameters of old edge.\n    const edge = {\n        ...rest,\n        id: options.shouldReplaceId ? getEdgeId(newConnection) : oldEdgeId,\n        source: newConnection.source,\n        target: newConnection.target,\n        sourceHandle: newConnection.sourceHandle,\n        targetHandle: newConnection.targetHandle,\n    };\n    return edges.filter((e) => e.id !== oldEdgeId).concat(edge);\n};\nconst pointToRendererPoint = ({ x, y }, [tx, ty, tScale], snapToGrid, [snapX, snapY]) => {\n    const position = {\n        x: (x - tx) / tScale,\n        y: (y - ty) / tScale,\n    };\n    if (snapToGrid) {\n        return {\n            x: snapX * Math.round(position.x / snapX),\n            y: snapY * Math.round(position.y / snapY),\n        };\n    }\n    return position;\n};\nconst rendererPointToPoint = ({ x, y }, [tx, ty, tScale]) => {\n    return {\n        x: x * tScale + tx,\n        y: y * tScale + ty,\n    };\n};\nconst getNodePositionWithOrigin = (node, nodeOrigin = [0, 0]) => {\n    if (!node) {\n        return {\n            x: 0,\n            y: 0,\n            positionAbsolute: {\n                x: 0,\n                y: 0,\n            },\n        };\n    }\n    const offsetX = (node.width ?? 0) * nodeOrigin[0];\n    const offsetY = (node.height ?? 0) * nodeOrigin[1];\n    const position = {\n        x: node.position.x - offsetX,\n        y: node.position.y - offsetY,\n    };\n    return {\n        ...position,\n        positionAbsolute: node.positionAbsolute\n            ? {\n                x: node.positionAbsolute.x - offsetX,\n                y: node.positionAbsolute.y - offsetY,\n            }\n            : position,\n    };\n};\nconst getRectOfNodes = (nodes, nodeOrigin = [0, 0]) => {\n    if (nodes.length === 0) {\n        return { x: 0, y: 0, width: 0, height: 0 };\n    }\n    const box = nodes.reduce((currBox, node) => {\n        const { x, y } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\n        return getBoundsOfBoxes(currBox, rectToBox({\n            x,\n            y,\n            width: node.width || 0,\n            height: node.height || 0,\n        }));\n    }, { x: Infinity, y: Infinity, x2: -Infinity, y2: -Infinity });\n    return boxToRect(box);\n};\nconst getNodesInside = (nodeInternals, rect, [tx, ty, tScale] = [0, 0, 1], partially = false, \n// set excludeNonSelectableNodes if you want to pay attention to the nodes \"selectable\" attribute\nexcludeNonSelectableNodes = false, nodeOrigin = [0, 0]) => {\n    const paneRect = {\n        x: (rect.x - tx) / tScale,\n        y: (rect.y - ty) / tScale,\n        width: rect.width / tScale,\n        height: rect.height / tScale,\n    };\n    const visibleNodes = [];\n    nodeInternals.forEach((node) => {\n        const { width, height, selectable = true, hidden = false } = node;\n        if ((excludeNonSelectableNodes && !selectable) || hidden) {\n            return false;\n        }\n        const { positionAbsolute } = getNodePositionWithOrigin(node, nodeOrigin);\n        const nodeRect = {\n            x: positionAbsolute.x,\n            y: positionAbsolute.y,\n            width: width || 0,\n            height: height || 0,\n        };\n        const overlappingArea = getOverlappingArea(paneRect, nodeRect);\n        const notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\n        const partiallyVisible = partially && overlappingArea > 0;\n        const area = (width || 0) * (height || 0);\n        const isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\n        if (isVisible || node.dragging) {\n            visibleNodes.push(node);\n        }\n    });\n    return visibleNodes;\n};\nconst getConnectedEdges = (nodes, edges) => {\n    const nodeIds = nodes.map((node) => node.id);\n    return edges.filter((edge) => nodeIds.includes(edge.source) || nodeIds.includes(edge.target));\n};\nconst getTransformForBounds = (bounds, width, height, minZoom, maxZoom, padding = 0.1) => {\n    const xZoom = width / (bounds.width * (1 + padding));\n    const yZoom = height / (bounds.height * (1 + padding));\n    const zoom = Math.min(xZoom, yZoom);\n    const clampedZoom = clamp(zoom, minZoom, maxZoom);\n    const boundsCenterX = bounds.x + bounds.width / 2;\n    const boundsCenterY = bounds.y + bounds.height / 2;\n    const x = width / 2 - boundsCenterX * clampedZoom;\n    const y = height / 2 - boundsCenterY * clampedZoom;\n    return [x, y, clampedZoom];\n};\nconst getD3Transition = (selection, duration = 0) => {\n    return selection.transition().duration(duration);\n};\n\n// this functions collects all handles and adds an absolute position\n// so that we can later find the closest handle to the mouse position\nfunction getHandles(node, handleBounds, type, currentHandle) {\n    return (handleBounds[type] || []).reduce((res, h) => {\n        if (`${node.id}-${h.id}-${type}` !== currentHandle) {\n            res.push({\n                id: h.id || null,\n                type,\n                nodeId: node.id,\n                x: (node.positionAbsolute?.x ?? 0) + h.x + h.width / 2,\n                y: (node.positionAbsolute?.y ?? 0) + h.y + h.height / 2,\n            });\n        }\n        return res;\n    }, []);\n}\nfunction getClosestHandle(event, doc, pos, connectionRadius, handles, validator) {\n    // we always want to prioritize the handle below the mouse cursor over the closest distance handle,\n    // because it could be that the center of another handle is closer to the mouse pointer than the handle below the cursor\n    const { x, y } = getEventPosition(event);\n    const domNodes = doc.elementsFromPoint(x, y);\n    const handleBelow = domNodes.find((el) => el.classList.contains('react-flow__handle'));\n    if (handleBelow) {\n        const handleNodeId = handleBelow.getAttribute('data-nodeid');\n        if (handleNodeId) {\n            const handleType = getHandleType(undefined, handleBelow);\n            const handleId = handleBelow.getAttribute('data-handleid');\n            const validHandleResult = validator({ nodeId: handleNodeId, id: handleId, type: handleType });\n            if (validHandleResult) {\n                return {\n                    handle: {\n                        id: handleId,\n                        type: handleType,\n                        nodeId: handleNodeId,\n                        x: pos.x,\n                        y: pos.y,\n                    },\n                    validHandleResult,\n                };\n            }\n        }\n    }\n    // if we couldn't find a handle below the mouse cursor we look for the closest distance based on the connectionRadius\n    let closestHandles = [];\n    let minDistance = Infinity;\n    handles.forEach((handle) => {\n        const distance = Math.sqrt((handle.x - pos.x) ** 2 + (handle.y - pos.y) ** 2);\n        if (distance <= connectionRadius) {\n            const validHandleResult = validator(handle);\n            if (distance <= minDistance) {\n                if (distance < minDistance) {\n                    closestHandles = [{ handle, validHandleResult }];\n                }\n                else if (distance === minDistance) {\n                    // when multiple handles are on the same distance we collect all of them\n                    closestHandles.push({\n                        handle,\n                        validHandleResult,\n                    });\n                }\n                minDistance = distance;\n            }\n        }\n    });\n    if (!closestHandles.length) {\n        return { handle: null, validHandleResult: defaultResult() };\n    }\n    if (closestHandles.length === 1) {\n        return closestHandles[0];\n    }\n    const hasValidHandle = closestHandles.some(({ validHandleResult }) => validHandleResult.isValid);\n    const hasTargetHandle = closestHandles.some(({ handle }) => handle.type === 'target');\n    // if multiple handles are layouted on top of each other we prefer the one with type = target and the one that is valid\n    return (closestHandles.find(({ handle, validHandleResult }) => hasTargetHandle ? handle.type === 'target' : (hasValidHandle ? validHandleResult.isValid : true)) || closestHandles[0]);\n}\nconst nullConnection = { source: null, target: null, sourceHandle: null, targetHandle: null };\nconst defaultResult = () => ({\n    handleDomNode: null,\n    isValid: false,\n    connection: nullConnection,\n    endHandle: null,\n});\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(handle, connectionMode, fromNodeId, fromHandleId, fromType, isValidConnection, doc) {\n    const isTarget = fromType === 'target';\n    const handleToCheck = doc.querySelector(`.react-flow__handle[data-id=\"${handle?.nodeId}-${handle?.id}-${handle?.type}\"]`);\n    const result = {\n        ...defaultResult(),\n        handleDomNode: handleToCheck,\n    };\n    if (handleToCheck) {\n        const handleType = getHandleType(undefined, handleToCheck);\n        const handleNodeId = handleToCheck.getAttribute('data-nodeid');\n        const handleId = handleToCheck.getAttribute('data-handleid');\n        const connectable = handleToCheck.classList.contains('connectable');\n        const connectableEnd = handleToCheck.classList.contains('connectableend');\n        const connection = {\n            source: isTarget ? handleNodeId : fromNodeId,\n            sourceHandle: isTarget ? handleId : fromHandleId,\n            target: isTarget ? fromNodeId : handleNodeId,\n            targetHandle: isTarget ? fromHandleId : handleId,\n        };\n        result.connection = connection;\n        const isConnectable = connectable && connectableEnd;\n        // in strict mode we don't allow target to target or source to source connections\n        const isValid = isConnectable &&\n            (connectionMode === ConnectionMode.Strict\n                ? (isTarget && handleType === 'source') || (!isTarget && handleType === 'target')\n                : handleNodeId !== fromNodeId || handleId !== fromHandleId);\n        if (isValid) {\n            result.endHandle = {\n                nodeId: handleNodeId,\n                handleId,\n                type: handleType,\n            };\n            result.isValid = isValidConnection(connection);\n        }\n    }\n    return result;\n}\nfunction getHandleLookup({ nodes, nodeId, handleId, handleType }) {\n    return nodes.reduce((res, node) => {\n        if (node[internalsSymbol]) {\n            const { handleBounds } = node[internalsSymbol];\n            let sourceHandles = [];\n            let targetHandles = [];\n            if (handleBounds) {\n                sourceHandles = getHandles(node, handleBounds, 'source', `${nodeId}-${handleId}-${handleType}`);\n                targetHandles = getHandles(node, handleBounds, 'target', `${nodeId}-${handleId}-${handleType}`);\n            }\n            res.push(...sourceHandles, ...targetHandles);\n        }\n        return res;\n    }, []);\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n    if (edgeUpdaterType) {\n        return edgeUpdaterType;\n    }\n    else if (handleDomNode?.classList.contains('target')) {\n        return 'target';\n    }\n    else if (handleDomNode?.classList.contains('source')) {\n        return 'source';\n    }\n    return null;\n}\nfunction resetRecentHandle(handleDomNode) {\n    handleDomNode?.classList.remove('valid', 'connecting', 'react-flow__handle-valid', 'react-flow__handle-connecting');\n}\nfunction getConnectionStatus(isInsideConnectionRadius, isHandleValid) {\n    let connectionStatus = null;\n    if (isHandleValid) {\n        connectionStatus = 'valid';\n    }\n    else if (isInsideConnectionRadius && !isHandleValid) {\n        connectionStatus = 'invalid';\n    }\n    return connectionStatus;\n}\n\nfunction handlePointerDown({ event, handleId, nodeId, onConnect, isTarget, getState, setState, isValidConnection, edgeUpdaterType, onEdgeUpdateEnd, }) {\n    // when react-flow is used inside a shadow root we can't use document\n    const doc = getHostForElement(event.target);\n    const { connectionMode, domNode, autoPanOnConnect, connectionRadius, onConnectStart, panBy, getNodes, cancelConnection, } = getState();\n    let autoPanId = 0;\n    let closestHandle;\n    const { x, y } = getEventPosition(event);\n    const clickedHandle = doc?.elementFromPoint(x, y);\n    const handleType = getHandleType(edgeUpdaterType, clickedHandle);\n    const containerBounds = domNode?.getBoundingClientRect();\n    if (!containerBounds || !handleType) {\n        return;\n    }\n    let prevActiveHandle;\n    let connectionPosition = getEventPosition(event, containerBounds);\n    let autoPanStarted = false;\n    let connection = null;\n    let isValid = false;\n    let handleDomNode = null;\n    const handleLookup = getHandleLookup({\n        nodes: getNodes(),\n        nodeId,\n        handleId,\n        handleType,\n    });\n    // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n    const autoPan = () => {\n        if (!autoPanOnConnect) {\n            return;\n        }\n        const [xMovement, yMovement] = calcAutoPan(connectionPosition, containerBounds);\n        panBy({ x: xMovement, y: yMovement });\n        autoPanId = requestAnimationFrame(autoPan);\n    };\n    setState({\n        connectionPosition,\n        connectionStatus: null,\n        // connectionNodeId etc will be removed in the next major in favor of connectionStartHandle\n        connectionNodeId: nodeId,\n        connectionHandleId: handleId,\n        connectionHandleType: handleType,\n        connectionStartHandle: {\n            nodeId,\n            handleId,\n            type: handleType,\n        },\n        connectionEndHandle: null,\n    });\n    onConnectStart?.(event, { nodeId, handleId, handleType });\n    function onPointerMove(event) {\n        const { transform } = getState();\n        connectionPosition = getEventPosition(event, containerBounds);\n        const { handle, validHandleResult } = getClosestHandle(event, doc, pointToRendererPoint(connectionPosition, transform, false, [1, 1]), connectionRadius, handleLookup, (handle) => isValidHandle(handle, connectionMode, nodeId, handleId, isTarget ? 'target' : 'source', isValidConnection, doc));\n        closestHandle = handle;\n        if (!autoPanStarted) {\n            autoPan();\n            autoPanStarted = true;\n        }\n        handleDomNode = validHandleResult.handleDomNode;\n        connection = validHandleResult.connection;\n        isValid = validHandleResult.isValid;\n        setState({\n            connectionPosition: closestHandle && isValid\n                ? rendererPointToPoint({\n                    x: closestHandle.x,\n                    y: closestHandle.y,\n                }, transform)\n                : connectionPosition,\n            connectionStatus: getConnectionStatus(!!closestHandle, isValid),\n            connectionEndHandle: validHandleResult.endHandle,\n        });\n        if (!closestHandle && !isValid && !handleDomNode) {\n            return resetRecentHandle(prevActiveHandle);\n        }\n        if (connection.source !== connection.target && handleDomNode) {\n            resetRecentHandle(prevActiveHandle);\n            prevActiveHandle = handleDomNode;\n            // @todo: remove the old class names \"react-flow__handle-\" in the next major version\n            handleDomNode.classList.add('connecting', 'react-flow__handle-connecting');\n            handleDomNode.classList.toggle('valid', isValid);\n            handleDomNode.classList.toggle('react-flow__handle-valid', isValid);\n        }\n    }\n    function onPointerUp(event) {\n        if ((closestHandle || handleDomNode) && connection && isValid) {\n            onConnect?.(connection);\n        }\n        // it's important to get a fresh reference from the store here\n        // in order to get the latest state of onConnectEnd\n        getState().onConnectEnd?.(event);\n        if (edgeUpdaterType) {\n            onEdgeUpdateEnd?.(event);\n        }\n        resetRecentHandle(prevActiveHandle);\n        cancelConnection();\n        cancelAnimationFrame(autoPanId);\n        autoPanStarted = false;\n        isValid = false;\n        connection = null;\n        handleDomNode = null;\n        doc.removeEventListener('mousemove', onPointerMove);\n        doc.removeEventListener('mouseup', onPointerUp);\n        doc.removeEventListener('touchmove', onPointerMove);\n        doc.removeEventListener('touchend', onPointerUp);\n    }\n    doc.addEventListener('mousemove', onPointerMove);\n    doc.addEventListener('mouseup', onPointerUp);\n    doc.addEventListener('touchmove', onPointerMove);\n    doc.addEventListener('touchend', onPointerUp);\n}\n\nconst alwaysValid = () => true;\nconst selector$f = (s) => ({\n    connectionStartHandle: s.connectionStartHandle,\n    connectOnClick: s.connectOnClick,\n    noPanClassName: s.noPanClassName,\n});\nconst connectingSelector = (nodeId, handleId, type) => (state) => {\n    const { connectionStartHandle: startHandle, connectionEndHandle: endHandle, connectionClickStartHandle: clickHandle, } = state;\n    return {\n        connecting: (startHandle?.nodeId === nodeId && startHandle?.handleId === handleId && startHandle?.type === type) ||\n            (endHandle?.nodeId === nodeId && endHandle?.handleId === handleId && endHandle?.type === type),\n        clickConnecting: clickHandle?.nodeId === nodeId && clickHandle?.handleId === handleId && clickHandle?.type === type,\n    };\n};\nconst Handle = forwardRef(({ type = 'source', position = Position.Top, isValidConnection, isConnectable = true, isConnectableStart = true, isConnectableEnd = true, id, onConnect, children, className, onMouseDown, onTouchStart, ...rest }, ref) => {\n    const handleId = id || null;\n    const isTarget = type === 'target';\n    const store = useStoreApi();\n    const nodeId = useNodeId();\n    const { connectOnClick, noPanClassName } = useStore(selector$f, shallow);\n    const { connecting, clickConnecting } = useStore(connectingSelector(nodeId, handleId, type), shallow);\n    if (!nodeId) {\n        store.getState().onError?.('010', errorMessages['error010']());\n    }\n    const onConnectExtended = (params) => {\n        const { defaultEdgeOptions, onConnect: onConnectAction, hasDefaultEdges } = store.getState();\n        const edgeParams = {\n            ...defaultEdgeOptions,\n            ...params,\n        };\n        if (hasDefaultEdges) {\n            const { edges, setEdges } = store.getState();\n            setEdges(addEdge(edgeParams, edges));\n        }\n        onConnectAction?.(edgeParams);\n        onConnect?.(edgeParams);\n    };\n    const onPointerDown = (event) => {\n        if (!nodeId) {\n            return;\n        }\n        const isMouseTriggered = isMouseEvent(event);\n        if (isConnectableStart && ((isMouseTriggered && event.button === 0) || !isMouseTriggered)) {\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectExtended,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection: isValidConnection || store.getState().isValidConnection || alwaysValid,\n            });\n        }\n        if (isMouseTriggered) {\n            onMouseDown?.(event);\n        }\n        else {\n            onTouchStart?.(event);\n        }\n    };\n    const onClick = (event) => {\n        const { onClickConnectStart, onClickConnectEnd, connectionClickStartHandle, connectionMode, isValidConnection: isValidConnectionStore, } = store.getState();\n        if (!nodeId || (!connectionClickStartHandle && !isConnectableStart)) {\n            return;\n        }\n        if (!connectionClickStartHandle) {\n            onClickConnectStart?.(event, { nodeId, handleId, handleType: type });\n            store.setState({ connectionClickStartHandle: { nodeId, type, handleId } });\n            return;\n        }\n        const doc = getHostForElement(event.target);\n        const isValidConnectionHandler = isValidConnection || isValidConnectionStore || alwaysValid;\n        const { connection, isValid } = isValidHandle({\n            nodeId,\n            id: handleId,\n            type,\n        }, connectionMode, connectionClickStartHandle.nodeId, connectionClickStartHandle.handleId || null, connectionClickStartHandle.type, isValidConnectionHandler, doc);\n        if (isValid) {\n            onConnectExtended(connection);\n        }\n        onClickConnectEnd?.(event);\n        store.setState({ connectionClickStartHandle: null });\n    };\n    return (jsx(\"div\", { \"data-handleid\": handleId, \"data-nodeid\": nodeId, \"data-handlepos\": position, \"data-id\": `${nodeId}-${handleId}-${type}`, className: cc([\n            'react-flow__handle',\n            `react-flow__handle-${position}`,\n            'nodrag',\n            noPanClassName,\n            className,\n            {\n                source: !isTarget,\n                target: isTarget,\n                connectable: isConnectable,\n                connectablestart: isConnectableStart,\n                connectableend: isConnectableEnd,\n                connecting: clickConnecting,\n                // this class is used to style the handle when the user is connecting\n                connectionindicator: isConnectable && ((isConnectableStart && !connecting) || (isConnectableEnd && connecting)),\n            },\n        ]), onMouseDown: onPointerDown, onTouchStart: onPointerDown, onClick: connectOnClick ? onClick : undefined, ref: ref, ...rest, children: children }));\n});\nHandle.displayName = 'Handle';\nvar Handle$1 = memo(Handle);\n\nconst DefaultNode = ({ data, isConnectable, targetPosition = Position.Top, sourcePosition = Position.Bottom, }) => {\n    return (jsxs(Fragment, { children: [jsx(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label, jsx(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\n};\nDefaultNode.displayName = 'DefaultNode';\nvar DefaultNode$1 = memo(DefaultNode);\n\nconst InputNode = ({ data, isConnectable, sourcePosition = Position.Bottom }) => (jsxs(Fragment, { children: [data?.label, jsx(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\nInputNode.displayName = 'InputNode';\nvar InputNode$1 = memo(InputNode);\n\nconst OutputNode = ({ data, isConnectable, targetPosition = Position.Top }) => (jsxs(Fragment, { children: [jsx(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label] }));\nOutputNode.displayName = 'OutputNode';\nvar OutputNode$1 = memo(OutputNode);\n\nconst GroupNode = () => null;\nGroupNode.displayName = 'GroupNode';\n\nconst selector$e = (s) => ({\n    selectedNodes: s.getNodes().filter((n) => n.selected),\n    selectedEdges: s.edges.filter((e) => e.selected),\n});\nconst selectId = (obj) => obj.id;\nfunction areEqual(a, b) {\n    return (shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) &&\n        shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId)));\n}\n// This is just a helper component for calling the onSelectionChange listener.\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\nconst SelectionListener = memo(({ onSelectionChange }) => {\n    const store = useStoreApi();\n    const { selectedNodes, selectedEdges } = useStore(selector$e, areEqual);\n    useEffect(() => {\n        const params = { nodes: selectedNodes, edges: selectedEdges };\n        onSelectionChange?.(params);\n        store.getState().onSelectionChange?.(params);\n    }, [selectedNodes, selectedEdges, onSelectionChange]);\n    return null;\n});\nSelectionListener.displayName = 'SelectionListener';\nconst changeSelector = (s) => !!s.onSelectionChange;\nfunction Wrapper$1({ onSelectionChange }) {\n    const storeHasSelectionChange = useStore(changeSelector);\n    if (onSelectionChange || storeHasSelectionChange) {\n        return jsx(SelectionListener, { onSelectionChange: onSelectionChange });\n    }\n    return null;\n}\n\nconst selector$d = (s) => ({\n    setNodes: s.setNodes,\n    setEdges: s.setEdges,\n    setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n    setMinZoom: s.setMinZoom,\n    setMaxZoom: s.setMaxZoom,\n    setTranslateExtent: s.setTranslateExtent,\n    setNodeExtent: s.setNodeExtent,\n    reset: s.reset,\n});\nfunction useStoreUpdater(value, setStoreState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setStoreState(value);\n        }\n    }, [value]);\n}\n// updates with values in store that don't have a dedicated setter function\nfunction useDirectStoreUpdater(key, value, setState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setState({ [key]: value });\n        }\n    }, [value]);\n}\nconst StoreUpdater = ({ nodes, edges, defaultNodes, defaultEdges, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, nodesDraggable, nodesConnectable, nodesFocusable, edgesFocusable, edgesUpdatable, elevateNodesOnSelect, minZoom, maxZoom, nodeExtent, onNodesChange, onEdgesChange, elementsSelectable, connectionMode, snapGrid, snapToGrid, translateExtent, connectOnClick, defaultEdgeOptions, fitView, fitViewOptions, onNodesDelete, onEdgesDelete, onNodeDrag, onNodeDragStart, onNodeDragStop, onSelectionDrag, onSelectionDragStart, onSelectionDragStop, noPanClassName, nodeOrigin, rfId, autoPanOnConnect, autoPanOnNodeDrag, onError, connectionRadius, isValidConnection, }) => {\n    const { setNodes, setEdges, setDefaultNodesAndEdges, setMinZoom, setMaxZoom, setTranslateExtent, setNodeExtent, reset, } = useStore(selector$d, shallow);\n    const store = useStoreApi();\n    useEffect(() => {\n        const edgesWithDefaults = defaultEdges?.map((e) => ({ ...e, ...defaultEdgeOptions }));\n        setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\n        return () => {\n            reset();\n        };\n    }, []);\n    useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\n    useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\n    useDirectStoreUpdater('onConnect', onConnect, store.setState);\n    useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\n    useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\n    useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\n    useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\n    useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\n    useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\n    useDirectStoreUpdater('nodesFocusable', nodesFocusable, store.setState);\n    useDirectStoreUpdater('edgesFocusable', edgesFocusable, store.setState);\n    useDirectStoreUpdater('edgesUpdatable', edgesUpdatable, store.setState);\n    useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\n    useDirectStoreUpdater('elevateNodesOnSelect', elevateNodesOnSelect, store.setState);\n    useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\n    useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\n    useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\n    useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\n    useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\n    useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\n    useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\n    useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\n    useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\n    useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\n    useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\n    useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\n    useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\n    useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\n    useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\n    useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\n    useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\n    useDirectStoreUpdater('rfId', rfId, store.setState);\n    useDirectStoreUpdater('autoPanOnConnect', autoPanOnConnect, store.setState);\n    useDirectStoreUpdater('autoPanOnNodeDrag', autoPanOnNodeDrag, store.setState);\n    useDirectStoreUpdater('onError', onError, store.setState);\n    useDirectStoreUpdater('connectionRadius', connectionRadius, store.setState);\n    useDirectStoreUpdater('isValidConnection', isValidConnection, store.setState);\n    useStoreUpdater(nodes, setNodes);\n    useStoreUpdater(edges, setEdges);\n    useStoreUpdater(minZoom, setMinZoom);\n    useStoreUpdater(maxZoom, setMaxZoom);\n    useStoreUpdater(translateExtent, setTranslateExtent);\n    useStoreUpdater(nodeExtent, setNodeExtent);\n    return null;\n};\n\nconst style = { display: 'none' };\nconst ariaLiveStyle = {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    margin: -1,\n    border: 0,\n    padding: 0,\n    overflow: 'hidden',\n    clip: 'rect(0px, 0px, 0px, 0px)',\n    clipPath: 'inset(100%)',\n};\nconst ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nconst ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nconst ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nconst selector$c = (s) => s.ariaLiveMessage;\nfunction AriaLiveMessage({ rfId }) {\n    const ariaLiveMessage = useStore(selector$c);\n    return (jsx(\"div\", { id: `${ARIA_LIVE_MESSAGE}-${rfId}`, \"aria-live\": \"assertive\", \"aria-atomic\": \"true\", style: ariaLiveStyle, children: ariaLiveMessage }));\n}\nfunction A11yDescriptions({ rfId, disableKeyboardA11y }) {\n    return (jsxs(Fragment, { children: [jsxs(\"div\", { id: `${ARIA_NODE_DESC_KEY}-${rfId}`, style: style, children: [\"Press enter or space to select a node.\", !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.', \" Press delete to remove it and escape to cancel.\", ' '] }), jsx(\"div\", { id: `${ARIA_EDGE_DESC_KEY}-${rfId}`, style: style, children: \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\" }), !disableKeyboardA11y && jsx(AriaLiveMessage, { rfId: rfId })] }));\n}\n\nconst doc = typeof document !== 'undefined' ? document : null;\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilities. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nvar useKeyPress = (keyCode = null, options = { target: doc }) => {\n    const [keyPressed, setKeyPressed] = useState(false);\n    // we need to remember if a modifier key is pressed in order to track it\n    const modifierPressed = useRef(false);\n    // we need to remember the pressed keys in order to support combinations\n    const pressedKeys = useRef(new Set([]));\n    // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n    // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n    // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n    // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n    // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n    // we can't find it in the list of keysToWatch.\n    const [keyCodes, keysToWatch] = useMemo(() => {\n        if (keyCode !== null) {\n            const keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n            const keys = keyCodeArr.filter((kc) => typeof kc === 'string').map((kc) => kc.split('+'));\n            const keysFlat = keys.reduce((res, item) => res.concat(...item), []);\n            return [keys, keysFlat];\n        }\n        return [[], []];\n    }, [keyCode]);\n    useEffect(() => {\n        if (keyCode !== null) {\n            const downHandler = (event) => {\n                modifierPressed.current = event.ctrlKey || event.metaKey || event.shiftKey;\n                if (!modifierPressed.current && isInputDOMNode(event)) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                pressedKeys.current.add(event[keyOrCode]);\n                if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n                    event.preventDefault();\n                    setKeyPressed(true);\n                }\n            };\n            const upHandler = (event) => {\n                if (!modifierPressed.current && isInputDOMNode(event)) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n                    setKeyPressed(false);\n                    pressedKeys.current.clear();\n                }\n                else {\n                    pressedKeys.current.delete(event[keyOrCode]);\n                }\n                // fix for Mac: when cmd key is pressed, keyup is not triggered for any other key, see: https://stackoverflow.com/questions/27380018/when-cmd-key-is-kept-pressed-keyup-is-not-triggered-for-any-other-key\n                if (event.key === 'Meta') {\n                    pressedKeys.current.clear();\n                }\n                modifierPressed.current = false;\n            };\n            const resetHandler = () => {\n                pressedKeys.current.clear();\n                setKeyPressed(false);\n            };\n            options?.target?.addEventListener('keydown', downHandler);\n            options?.target?.addEventListener('keyup', upHandler);\n            window.addEventListener('blur', resetHandler);\n            return () => {\n                options?.target?.removeEventListener('keydown', downHandler);\n                options?.target?.removeEventListener('keyup', upHandler);\n                window.removeEventListener('blur', resetHandler);\n            };\n        }\n    }, [keyCode, setKeyPressed]);\n    return keyPressed;\n};\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n    return (keyCodes\n        // we only want to compare same sizes of keyCode definitions\n        // and pressed keys. When the user specified 'Meta' as a key somewhere\n        // this would also be truthy without this filter when user presses 'Meta' + 'r'\n        .filter((keys) => isUp || keys.length === pressedKeys.size)\n        // since we want to support multiple possibilities only one of the\n        // combinations need to be part of the pressed keys\n        .some((keys) => keys.every((k) => pressedKeys.has(k))));\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n    return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\n\nfunction calculateXYZPosition(node, nodeInternals, result, nodeOrigin) {\n    if (!node.parentNode) {\n        return result;\n    }\n    const parentNode = nodeInternals.get(node.parentNode);\n    const parentNodePosition = getNodePositionWithOrigin(parentNode, nodeOrigin);\n    return calculateXYZPosition(parentNode, nodeInternals, {\n        x: (result.x ?? 0) + parentNodePosition.x,\n        y: (result.y ?? 0) + parentNodePosition.y,\n        z: (parentNode[internalsSymbol]?.z ?? 0) > (result.z ?? 0) ? parentNode[internalsSymbol]?.z ?? 0 : result.z ?? 0,\n    }, nodeOrigin);\n}\nfunction updateAbsoluteNodePositions(nodeInternals, nodeOrigin, parentNodes) {\n    nodeInternals.forEach((node) => {\n        if (node.parentNode && !nodeInternals.has(node.parentNode)) {\n            throw new Error(`Parent node ${node.parentNode} not found`);\n        }\n        if (node.parentNode || parentNodes?.[node.id]) {\n            const { x, y, z } = calculateXYZPosition(node, nodeInternals, {\n                ...node.position,\n                z: node[internalsSymbol]?.z ?? 0,\n            }, nodeOrigin);\n            node.positionAbsolute = {\n                x,\n                y,\n            };\n            node[internalsSymbol].z = z;\n            if (parentNodes?.[node.id]) {\n                node[internalsSymbol].isParent = true;\n            }\n        }\n    });\n}\nfunction createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) {\n    const nextNodeInternals = new Map();\n    const parentNodes = {};\n    const selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n    nodes.forEach((node) => {\n        const z = (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n        const currInternals = nodeInternals.get(node.id);\n        const internals = {\n            width: currInternals?.width,\n            height: currInternals?.height,\n            ...node,\n            positionAbsolute: {\n                x: node.position.x,\n                y: node.position.y,\n            },\n        };\n        if (node.parentNode) {\n            internals.parentNode = node.parentNode;\n            parentNodes[node.parentNode] = true;\n        }\n        Object.defineProperty(internals, internalsSymbol, {\n            enumerable: false,\n            value: {\n                handleBounds: currInternals?.[internalsSymbol]?.handleBounds,\n                z,\n            },\n        });\n        nextNodeInternals.set(node.id, internals);\n    });\n    updateAbsoluteNodePositions(nextNodeInternals, nodeOrigin, parentNodes);\n    return nextNodeInternals;\n}\nfunction fitView(get, options = {}) {\n    const { getNodes, width, height, minZoom, maxZoom, d3Zoom, d3Selection, fitViewOnInitDone, fitViewOnInit, nodeOrigin, } = get();\n    const isInitialFitView = options.initial && !fitViewOnInitDone && fitViewOnInit;\n    const d3initialized = d3Zoom && d3Selection;\n    if (d3initialized && (isInitialFitView || !options.initial)) {\n        const nodes = getNodes().filter((n) => {\n            const isVisible = options.includeHiddenNodes ? n.width && n.height : !n.hidden;\n            if (options.nodes?.length) {\n                return isVisible && options.nodes.some((optionNode) => optionNode.id === n.id);\n            }\n            return isVisible;\n        });\n        const nodesInitialized = nodes.every((n) => n.width && n.height);\n        if (nodes.length > 0 && nodesInitialized) {\n            const bounds = getRectOfNodes(nodes, nodeOrigin);\n            const [x, y, zoom] = getTransformForBounds(bounds, width, height, options.minZoom ?? minZoom, options.maxZoom ?? maxZoom, options.padding ?? 0.1);\n            const nextTransform = zoomIdentity.translate(x, y).scale(zoom);\n            if (typeof options.duration === 'number' && options.duration > 0) {\n                d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\n            }\n            else {\n                d3Zoom.transform(d3Selection, nextTransform);\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\n    nodeChanges.forEach((change) => {\n        const node = nodeInternals.get(change.id);\n        if (node) {\n            nodeInternals.set(node.id, {\n                ...node,\n                [internalsSymbol]: node[internalsSymbol],\n                selected: change.selected,\n            });\n        }\n    });\n    return new Map(nodeInternals);\n}\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\n    return edges.map((e) => {\n        const change = edgeChanges.find((change) => change.id === e.id);\n        if (change) {\n            e.selected = change.selected;\n        }\n        return e;\n    });\n}\nfunction updateNodesAndEdgesSelections({ changedNodes, changedEdges, get, set }) {\n    const { nodeInternals, edges, onNodesChange, onEdgesChange, hasDefaultNodes, hasDefaultEdges } = get();\n    if (changedNodes?.length) {\n        if (hasDefaultNodes) {\n            set({ nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals) });\n        }\n        onNodesChange?.(changedNodes);\n    }\n    if (changedEdges?.length) {\n        if (hasDefaultEdges) {\n            set({ edges: handleControlledEdgeSelectionChange(changedEdges, edges) });\n        }\n        onEdgesChange?.(changedEdges);\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => { };\nconst initialViewportHelper = {\n    zoomIn: noop,\n    zoomOut: noop,\n    zoomTo: noop,\n    getZoom: () => 1,\n    setViewport: noop,\n    getViewport: () => ({ x: 0, y: 0, zoom: 1 }),\n    fitView: () => false,\n    setCenter: noop,\n    fitBounds: noop,\n    project: (position) => position,\n    viewportInitialized: false,\n};\nconst selector$b = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n});\nconst useViewportHelper = () => {\n    const store = useStoreApi();\n    const { d3Zoom, d3Selection } = useStore(selector$b, shallow);\n    const viewportHelperFunctions = useMemo(() => {\n        if (d3Selection && d3Zoom) {\n            return {\n                zoomIn: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1.2),\n                zoomOut: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1 / 1.2),\n                zoomTo: (zoomLevel, options) => d3Zoom.scaleTo(getD3Transition(d3Selection, options?.duration), zoomLevel),\n                getZoom: () => store.getState().transform[2],\n                setViewport: (transform, options) => {\n                    const [x, y, zoom] = store.getState().transform;\n                    const nextTransform = zoomIdentity\n                        .translate(transform.x ?? x, transform.y ?? y)\n                        .scale(transform.zoom ?? zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), nextTransform);\n                },\n                getViewport: () => {\n                    const [x, y, zoom] = store.getState().transform;\n                    return { x, y, zoom };\n                },\n                fitView: (options) => fitView(store.getState, options),\n                setCenter: (x, y, options) => {\n                    const { width, height, maxZoom } = store.getState();\n                    const nextZoom = typeof options?.zoom !== 'undefined' ? options.zoom : maxZoom;\n                    const centerX = width / 2 - x * nextZoom;\n                    const centerY = height / 2 - y * nextZoom;\n                    const transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                fitBounds: (bounds, options) => {\n                    const { width, height, minZoom, maxZoom } = store.getState();\n                    const [x, y, zoom] = getTransformForBounds(bounds, width, height, minZoom, maxZoom, options?.padding ?? 0.1);\n                    const transform = zoomIdentity.translate(x, y).scale(zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                project: (position) => {\n                    const { transform, snapToGrid, snapGrid } = store.getState();\n                    return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\n                },\n                viewportInitialized: true,\n            };\n        }\n        return initialViewportHelper;\n    }, [d3Zoom, d3Selection]);\n    return viewportHelperFunctions;\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction useReactFlow() {\n    const viewportHelper = useViewportHelper();\n    const store = useStoreApi();\n    const getNodes = useCallback(() => {\n        return store\n            .getState()\n            .getNodes()\n            .map((n) => ({ ...n }));\n    }, []);\n    const getNode = useCallback((id) => {\n        return store.getState().nodeInternals.get(id);\n    }, []);\n    const getEdges = useCallback(() => {\n        const { edges = [] } = store.getState();\n        return edges.map((e) => ({ ...e }));\n    }, []);\n    const getEdge = useCallback((id) => {\n        const { edges = [] } = store.getState();\n        return edges.find((e) => e.id === id);\n    }, []);\n    const setNodes = useCallback((payload) => {\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        const nodes = getNodes();\n        const nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\n        if (hasDefaultNodes) {\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nextNodes.length === 0\n                ? nodes.map((node) => ({ type: 'remove', id: node.id }))\n                : nextNodes.map((node) => ({ item: node, type: 'reset' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const setEdges = useCallback((payload) => {\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        const nextEdges = typeof payload === 'function' ? payload(edges) : payload;\n        if (hasDefaultEdges) {\n            setEdges(nextEdges);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.length === 0\n                ? edges.map((edge) => ({ type: 'remove', id: edge.id }))\n                : nextEdges.map((edge) => ({ item: edge, type: 'reset' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const addNodes = useCallback((payload) => {\n        const nodes = Array.isArray(payload) ? payload : [payload];\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        if (hasDefaultNodes) {\n            const currentNodes = getNodes();\n            const nextNodes = [...currentNodes, ...nodes];\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nodes.map((node) => ({ item: node, type: 'add' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const addEdges = useCallback((payload) => {\n        const nextEdges = Array.isArray(payload) ? payload : [payload];\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        if (hasDefaultEdges) {\n            setEdges([...edges, ...nextEdges]);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.map((edge) => ({ item: edge, type: 'add' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const toObject = useCallback(() => {\n        const { getNodes, edges = [], transform } = store.getState();\n        const [x, y, zoom] = transform;\n        return {\n            nodes: getNodes().map((n) => ({ ...n })),\n            edges: edges.map((e) => ({ ...e })),\n            viewport: {\n                x,\n                y,\n                zoom,\n            },\n        };\n    }, []);\n    const deleteElements = useCallback(({ nodes: nodesDeleted, edges: edgesDeleted }) => {\n        const { nodeInternals, getNodes, edges, hasDefaultNodes, hasDefaultEdges, onNodesDelete, onEdgesDelete, onNodesChange, onEdgesChange, } = store.getState();\n        const nodeIds = (nodesDeleted || []).map((node) => node.id);\n        const edgeIds = (edgesDeleted || []).map((edge) => edge.id);\n        const nodesToRemove = getNodes().reduce((res, node) => {\n            const parentHit = !nodeIds.includes(node.id) && node.parentNode && res.find((n) => n.id === node.parentNode);\n            const deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\n            if (deletable && (nodeIds.includes(node.id) || parentHit)) {\n                res.push(node);\n            }\n            return res;\n        }, []);\n        const deletableEdges = edges.filter((e) => (typeof e.deletable === 'boolean' ? e.deletable : true));\n        const initialHitEdges = deletableEdges.filter((e) => edgeIds.includes(e.id));\n        if (nodesToRemove || initialHitEdges) {\n            const connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\n            const edgesToRemove = [...initialHitEdges, ...connectedEdges];\n            const edgeIdsToRemove = edgesToRemove.reduce((res, edge) => {\n                if (!res.includes(edge.id)) {\n                    res.push(edge.id);\n                }\n                return res;\n            }, []);\n            if (hasDefaultEdges || hasDefaultNodes) {\n                if (hasDefaultEdges) {\n                    store.setState({\n                        edges: edges.filter((e) => !edgeIdsToRemove.includes(e.id)),\n                    });\n                }\n                if (hasDefaultNodes) {\n                    nodesToRemove.forEach((node) => {\n                        nodeInternals.delete(node.id);\n                    });\n                    store.setState({\n                        nodeInternals: new Map(nodeInternals),\n                    });\n                }\n            }\n            if (edgeIdsToRemove.length > 0) {\n                onEdgesDelete?.(edgesToRemove);\n                if (onEdgesChange) {\n                    onEdgesChange(edgeIdsToRemove.map((id) => ({\n                        id,\n                        type: 'remove',\n                    })));\n                }\n            }\n            if (nodesToRemove.length > 0) {\n                onNodesDelete?.(nodesToRemove);\n                if (onNodesChange) {\n                    const nodeChanges = nodesToRemove.map((n) => ({ id: n.id, type: 'remove' }));\n                    onNodesChange(nodeChanges);\n                }\n            }\n        }\n    }, []);\n    const getNodeRect = useCallback((nodeOrRect) => {\n        const isRect = isRectObject(nodeOrRect);\n        const node = isRect ? null : store.getState().nodeInternals.get(nodeOrRect.id);\n        const nodeRect = isRect ? nodeOrRect : nodeToRect(node);\n        return [nodeRect, node, isRect];\n    }, []);\n    const getIntersectingNodes = useCallback((nodeOrRect, partially = true, nodes) => {\n        const [nodeRect, node, isRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return [];\n        }\n        return (nodes || store.getState().getNodes()).filter((n) => {\n            if (!isRect && (n.id === node.id || !n.positionAbsolute)) {\n                return false;\n            }\n            const currNodeRect = nodeToRect(n);\n            const overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n            const partiallyVisible = partially && overlappingArea > 0;\n            return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n        });\n    }, []);\n    const isNodeIntersecting = useCallback((nodeOrRect, area, partially = true) => {\n        const [nodeRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return false;\n        }\n        const overlappingArea = getOverlappingArea(nodeRect, area);\n        const partiallyVisible = partially && overlappingArea > 0;\n        return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n    }, []);\n    return useMemo(() => {\n        return {\n            ...viewportHelper,\n            getNodes,\n            getNode,\n            getEdges,\n            getEdge,\n            setNodes,\n            setEdges,\n            addNodes,\n            addEdges,\n            toObject,\n            deleteElements,\n            getIntersectingNodes,\n            isNodeIntersecting,\n        };\n    }, [\n        viewportHelper,\n        getNodes,\n        getNode,\n        getEdges,\n        getEdge,\n        setNodes,\n        setEdges,\n        addNodes,\n        addEdges,\n        toObject,\n        deleteElements,\n        getIntersectingNodes,\n        isNodeIntersecting,\n    ]);\n}\n\nvar useGlobalKeyHandler = ({ deleteKeyCode, multiSelectionKeyCode }) => {\n    const store = useStoreApi();\n    const { deleteElements } = useReactFlow();\n    const deleteKeyPressed = useKeyPress(deleteKeyCode);\n    const multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\n    useEffect(() => {\n        if (deleteKeyPressed) {\n            const { edges, getNodes } = store.getState();\n            const selectedNodes = getNodes().filter((node) => node.selected);\n            const selectedEdges = edges.filter((edge) => edge.selected);\n            deleteElements({ nodes: selectedNodes, edges: selectedEdges });\n            store.setState({ nodesSelectionActive: false });\n        }\n    }, [deleteKeyPressed]);\n    useEffect(() => {\n        store.setState({ multiSelectionActive: multiSelectionKeyPressed });\n    }, [multiSelectionKeyPressed]);\n};\n\nfunction useResizeHandler(rendererNode) {\n    const store = useStoreApi();\n    useEffect(() => {\n        let resizeObserver;\n        const updateDimensions = () => {\n            if (!rendererNode.current) {\n                return;\n            }\n            const size = getDimensions(rendererNode.current);\n            if (size.height === 0 || size.width === 0) {\n                store.getState().onError?.('004', errorMessages['error004']());\n            }\n            store.setState({ width: size.width || 500, height: size.height || 500 });\n        };\n        updateDimensions();\n        window.addEventListener('resize', updateDimensions);\n        if (rendererNode.current) {\n            resizeObserver = new ResizeObserver(() => updateDimensions());\n            resizeObserver.observe(rendererNode.current);\n        }\n        return () => {\n            window.removeEventListener('resize', updateDimensions);\n            if (resizeObserver && rendererNode.current) {\n                resizeObserver.unobserve(rendererNode.current);\n            }\n        };\n    }, []);\n}\n\nconst containerStyle = {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n};\n\nconst viewChanged = (prevViewport, eventTransform) => prevViewport.x !== eventTransform.x || prevViewport.y !== eventTransform.y || prevViewport.zoom !== eventTransform.k;\nconst eventToFlowTransform = (eventTransform) => ({\n    x: eventTransform.x,\n    y: eventTransform.y,\n    zoom: eventTransform.k,\n});\nconst isWrappedWithClass = (event, className) => event.target.closest(`.${className}`);\nconst isRightClickPan = (panOnDrag, usedButton) => usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\nconst wheelDelta = (event) => {\n    const factor = event.ctrlKey && isMacOs() ? 10 : 1;\n    return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * factor;\n};\nconst selector$a = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n    d3ZoomHandler: s.d3ZoomHandler,\n    userSelectionActive: s.userSelectionActive,\n});\nconst ZoomPane = ({ onMove, onMoveStart, onMoveEnd, onPaneContextMenu, zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, elementsSelectable, panOnDrag = true, defaultViewport, translateExtent, minZoom, maxZoom, zoomActivationKeyCode, preventScrolling = true, children, noWheelClassName, noPanClassName, }) => {\n    const timerId = useRef();\n    const store = useStoreApi();\n    const isZoomingOrPanning = useRef(false);\n    const zoomedWithRightMouseButton = useRef(false);\n    const zoomPane = useRef(null);\n    const prevTransform = useRef({ x: 0, y: 0, zoom: 0 });\n    const { d3Zoom, d3Selection, d3ZoomHandler, userSelectionActive } = useStore(selector$a, shallow);\n    const zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n    const mouseButton = useRef(0);\n    const isPanScrolling = useRef(false);\n    const panScrollTimeout = useRef();\n    useResizeHandler(zoomPane);\n    useEffect(() => {\n        if (zoomPane.current) {\n            const bbox = zoomPane.current.getBoundingClientRect();\n            const d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\n            const selection = select(zoomPane.current).call(d3ZoomInstance);\n            const updatedTransform = zoomIdentity\n                .translate(defaultViewport.x, defaultViewport.y)\n                .scale(clamp(defaultViewport.zoom, minZoom, maxZoom));\n            const extent = [\n                [0, 0],\n                [bbox.width, bbox.height],\n            ];\n            const constrainedTransform = d3ZoomInstance.constrain()(updatedTransform, extent, translateExtent);\n            d3ZoomInstance.transform(selection, constrainedTransform);\n            d3ZoomInstance.wheelDelta(wheelDelta);\n            store.setState({\n                d3Zoom: d3ZoomInstance,\n                d3Selection: selection,\n                d3ZoomHandler: selection.on('wheel.zoom'),\n                // we need to pass transform because zoom handler is not registered when we set the initial transform\n                transform: [constrainedTransform.x, constrainedTransform.y, constrainedTransform.k],\n                domNode: zoomPane.current.closest('.react-flow'),\n            });\n        }\n    }, []);\n    useEffect(() => {\n        if (d3Selection && d3Zoom) {\n            if (panOnScroll && !zoomActivationKeyPressed && !userSelectionActive) {\n                d3Selection.on('wheel.zoom', (event) => {\n                    if (isWrappedWithClass(event, noWheelClassName)) {\n                        return false;\n                    }\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n                    const currentZoom = d3Selection.property('__zoom').k || 1;\n                    const _isMacOs = isMacOs();\n                    // macos sets ctrlKey=true for pinch gesture on a trackpad\n                    if (event.ctrlKey && zoomOnPinch && _isMacOs) {\n                        const point = pointer(event);\n                        const pinchDelta = wheelDelta(event);\n                        const zoom = currentZoom * Math.pow(2, pinchDelta);\n                        // @ts-ignore\n                        d3Zoom.scaleTo(d3Selection, zoom, point, event);\n                        return;\n                    }\n                    // increase scroll speed in firefox\n                    // firefox: deltaMode === 1; chrome: deltaMode === 0\n                    const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n                    let deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n                    let deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n                    // this enables vertical scrolling with shift + scroll on windows\n                    if (!_isMacOs && event.shiftKey && panOnScrollMode !== PanOnScrollMode.Vertical) {\n                        deltaX = event.deltaY * deltaNormalize;\n                        deltaY = 0;\n                    }\n                    d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed, \n                    // @ts-ignore\n                    { internal: true });\n                    const nextViewport = eventToFlowTransform(d3Selection.property('__zoom'));\n                    const { onViewportChangeStart, onViewportChange, onViewportChangeEnd } = store.getState();\n                    clearTimeout(panScrollTimeout.current);\n                    // for pan on scroll we need to handle the event calls on our own\n                    // we can't use the start, zoom and end events from d3-zoom\n                    // because start and move gets called on every scroll event and not once at the beginning\n                    if (!isPanScrolling.current) {\n                        isPanScrolling.current = true;\n                        onMoveStart?.(event, nextViewport);\n                        onViewportChangeStart?.(nextViewport);\n                    }\n                    if (isPanScrolling.current) {\n                        onMove?.(event, nextViewport);\n                        onViewportChange?.(nextViewport);\n                        panScrollTimeout.current = setTimeout(() => {\n                            onMoveEnd?.(event, nextViewport);\n                            onViewportChangeEnd?.(nextViewport);\n                            isPanScrolling.current = false;\n                        }, 150);\n                    }\n                }, { passive: false });\n            }\n            else if (typeof d3ZoomHandler !== 'undefined') {\n                d3Selection.on('wheel.zoom', function (event, d) {\n                    if (!preventScrolling || isWrappedWithClass(event, noWheelClassName)) {\n                        return null;\n                    }\n                    event.preventDefault();\n                    d3ZoomHandler.call(this, event, d);\n                }, { passive: false });\n            }\n        }\n    }, [\n        userSelectionActive,\n        panOnScroll,\n        panOnScrollMode,\n        d3Selection,\n        d3Zoom,\n        d3ZoomHandler,\n        zoomActivationKeyPressed,\n        zoomOnPinch,\n        preventScrolling,\n        noWheelClassName,\n        onMoveStart,\n        onMove,\n        onMoveEnd,\n    ]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('start', (event) => {\n                if (!event.sourceEvent || event.sourceEvent.internal) {\n                    return null;\n                }\n                // we need to remember it here, because it's always 0 in the \"zoom\" event\n                mouseButton.current = event.sourceEvent?.button;\n                const { onViewportChangeStart } = store.getState();\n                const flowTransform = eventToFlowTransform(event.transform);\n                isZoomingOrPanning.current = true;\n                prevTransform.current = flowTransform;\n                if (event.sourceEvent?.type === 'mousedown') {\n                    store.setState({ paneDragging: true });\n                }\n                onViewportChangeStart?.(flowTransform);\n                onMoveStart?.(event.sourceEvent, flowTransform);\n            });\n        }\n    }, [d3Zoom, onMoveStart]);\n    useEffect(() => {\n        if (d3Zoom) {\n            if (userSelectionActive && !isZoomingOrPanning.current) {\n                d3Zoom.on('zoom', null);\n            }\n            else if (!userSelectionActive) {\n                d3Zoom.on('zoom', (event) => {\n                    const { onViewportChange } = store.getState();\n                    store.setState({ transform: [event.transform.x, event.transform.y, event.transform.k] });\n                    zoomedWithRightMouseButton.current = !!(onPaneContextMenu && isRightClickPan(panOnDrag, mouseButton.current ?? 0));\n                    if ((onMove || onViewportChange) && !event.sourceEvent?.internal) {\n                        const flowTransform = eventToFlowTransform(event.transform);\n                        onViewportChange?.(flowTransform);\n                        onMove?.(event.sourceEvent, flowTransform);\n                    }\n                });\n            }\n        }\n    }, [userSelectionActive, d3Zoom, onMove, panOnDrag, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('end', (event) => {\n                if (!event.sourceEvent || event.sourceEvent.internal) {\n                    return null;\n                }\n                const { onViewportChangeEnd } = store.getState();\n                isZoomingOrPanning.current = false;\n                store.setState({ paneDragging: false });\n                if (onPaneContextMenu &&\n                    isRightClickPan(panOnDrag, mouseButton.current ?? 0) &&\n                    !zoomedWithRightMouseButton.current) {\n                    onPaneContextMenu(event.sourceEvent);\n                }\n                zoomedWithRightMouseButton.current = false;\n                if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\n                    const flowTransform = eventToFlowTransform(event.transform);\n                    prevTransform.current = flowTransform;\n                    clearTimeout(timerId.current);\n                    timerId.current = setTimeout(() => {\n                        onViewportChangeEnd?.(flowTransform);\n                        onMoveEnd?.(event.sourceEvent, flowTransform);\n                    }, panOnScroll ? 150 : 0);\n                }\n            });\n        }\n    }, [d3Zoom, panOnScroll, panOnDrag, onMoveEnd, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.filter((event) => {\n                const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n                const pinchZoom = zoomOnPinch && event.ctrlKey;\n                if (event.button === 1 &&\n                    event.type === 'mousedown' &&\n                    (isWrappedWithClass(event, 'react-flow__node') || isWrappedWithClass(event, 'react-flow__edge'))) {\n                    return true;\n                }\n                // if all interactions are disabled, we prevent all zoom events\n                if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n                    return false;\n                }\n                // during a selection we prevent all other interactions\n                if (userSelectionActive) {\n                    return false;\n                }\n                // if zoom on double click is disabled, we prevent the double click event\n                if (!zoomOnDoubleClick && event.type === 'dblclick') {\n                    return false;\n                }\n                // if the target element is inside an element with the nowheel class, we prevent zooming\n                if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n                    return false;\n                }\n                // if the target element is inside an element with the nopan class, we prevent panning\n                if (isWrappedWithClass(event, noPanClassName) && event.type !== 'wheel') {\n                    return false;\n                }\n                if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n                    return false;\n                }\n                // when there is no scroll handling enabled, we prevent all wheel events\n                if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n                    return false;\n                }\n                // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n                if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n                    return false;\n                }\n                // if the pane is only movable using allowed clicks\n                if (Array.isArray(panOnDrag) &&\n                    !panOnDrag.includes(event.button) &&\n                    (event.type === 'mousedown' || event.type === 'touchstart')) {\n                    return false;\n                }\n                // We only allow right clicks if pan on drag is set to right click\n                const buttonAllowed = (Array.isArray(panOnDrag) && panOnDrag.includes(event.button)) || !event.button || event.button <= 1;\n                // default filter for d3-zoom\n                return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n            });\n        }\n    }, [\n        userSelectionActive,\n        d3Zoom,\n        zoomOnScroll,\n        zoomOnPinch,\n        panOnScroll,\n        zoomOnDoubleClick,\n        panOnDrag,\n        elementsSelectable,\n        zoomActivationKeyPressed,\n    ]);\n    return (jsx(\"div\", { className: \"react-flow__renderer\", ref: zoomPane, style: containerStyle, children: children }));\n};\n\nconst selector$9 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    userSelectionRect: s.userSelectionRect,\n});\nfunction UserSelection() {\n    const { userSelectionActive, userSelectionRect } = useStore(selector$9, shallow);\n    const isActive = userSelectionActive && userSelectionRect;\n    if (!isActive) {\n        return null;\n    }\n    return (jsx(\"div\", { className: \"react-flow__selection react-flow__container\", style: {\n            width: userSelectionRect.width,\n            height: userSelectionRect.height,\n            transform: `translate(${userSelectionRect.x}px, ${userSelectionRect.y}px)`,\n        } }));\n}\n\nfunction handleParentExpand(res, updateItem) {\n    const parent = res.find((e) => e.id === updateItem.parentNode);\n    if (parent) {\n        const extendWidth = updateItem.position.x + updateItem.width - parent.width;\n        const extendHeight = updateItem.position.y + updateItem.height - parent.height;\n        if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\n            parent.style = { ...parent.style } || {};\n            parent.style.width = parent.style.width ?? parent.width;\n            parent.style.height = parent.style.height ?? parent.height;\n            if (extendWidth > 0) {\n                parent.style.width += extendWidth;\n            }\n            if (extendHeight > 0) {\n                parent.style.height += extendHeight;\n            }\n            if (updateItem.position.x < 0) {\n                const xDiff = Math.abs(updateItem.position.x);\n                parent.position.x = parent.position.x - xDiff;\n                parent.style.width += xDiff;\n                updateItem.position.x = 0;\n            }\n            if (updateItem.position.y < 0) {\n                const yDiff = Math.abs(updateItem.position.y);\n                parent.position.y = parent.position.y - yDiff;\n                parent.style.height += yDiff;\n                updateItem.position.y = 0;\n            }\n            parent.width = parent.style.width;\n            parent.height = parent.style.height;\n        }\n    }\n}\nfunction applyChanges(changes, elements) {\n    // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\n    if (changes.some((c) => c.type === 'reset')) {\n        return changes.filter((c) => c.type === 'reset').map((c) => c.item);\n    }\n    const initElements = changes.filter((c) => c.type === 'add').map((c) => c.item);\n    return elements.reduce((res, item) => {\n        const currentChanges = changes.filter((c) => c.id === item.id);\n        if (currentChanges.length === 0) {\n            res.push(item);\n            return res;\n        }\n        const updateItem = { ...item };\n        for (const currentChange of currentChanges) {\n            if (currentChange) {\n                switch (currentChange.type) {\n                    case 'select': {\n                        updateItem.selected = currentChange.selected;\n                        break;\n                    }\n                    case 'position': {\n                        if (typeof currentChange.position !== 'undefined') {\n                            updateItem.position = currentChange.position;\n                        }\n                        if (typeof currentChange.positionAbsolute !== 'undefined') {\n                            updateItem.positionAbsolute = currentChange.positionAbsolute;\n                        }\n                        if (typeof currentChange.dragging !== 'undefined') {\n                            updateItem.dragging = currentChange.dragging;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'dimensions': {\n                        if (typeof currentChange.dimensions !== 'undefined') {\n                            updateItem.width = currentChange.dimensions.width;\n                            updateItem.height = currentChange.dimensions.height;\n                        }\n                        if (typeof currentChange.updateStyle !== 'undefined') {\n                            updateItem.style = { ...(updateItem.style || {}), ...currentChange.dimensions };\n                        }\n                        if (typeof currentChange.resizing === 'boolean') {\n                            updateItem.resizing = currentChange.resizing;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'remove': {\n                        return res;\n                    }\n                }\n            }\n        }\n        res.push(updateItem);\n        return res;\n    }, initElements);\n}\nfunction applyNodeChanges(changes, nodes) {\n    return applyChanges(changes, nodes);\n}\nfunction applyEdgeChanges(changes, edges) {\n    return applyChanges(changes, edges);\n}\nconst createSelectionChange = (id, selected) => ({\n    id,\n    type: 'select',\n    selected,\n});\nfunction getSelectionChanges(items, selectedIds) {\n    return items.reduce((res, item) => {\n        const willBeSelected = selectedIds.includes(item.id);\n        if (!item.selected && willBeSelected) {\n            item.selected = true;\n            res.push(createSelectionChange(item.id, true));\n        }\n        else if (item.selected && !willBeSelected) {\n            item.selected = false;\n            res.push(createSelectionChange(item.id, false));\n        }\n        return res;\n    }, []);\n}\n\nconst wrapHandler = (handler, containerRef) => {\n    return (event) => {\n        if (event.target !== containerRef.current) {\n            return;\n        }\n        handler?.(event);\n    };\n};\nconst selector$8 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    elementsSelectable: s.elementsSelectable,\n    dragging: s.paneDragging,\n});\nconst Pane = memo(({ isSelecting, selectionMode = SelectionMode.Full, panOnDrag, onSelectionStart, onSelectionEnd, onPaneClick, onPaneContextMenu, onPaneScroll, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, children, }) => {\n    const container = useRef(null);\n    const store = useStoreApi();\n    const prevSelectedNodesCount = useRef(0);\n    const prevSelectedEdgesCount = useRef(0);\n    const containerBounds = useRef();\n    const { userSelectionActive, elementsSelectable, dragging } = useStore(selector$8, shallow);\n    const resetUserSelection = () => {\n        store.setState({ userSelectionActive: false, userSelectionRect: null });\n        prevSelectedNodesCount.current = 0;\n        prevSelectedEdgesCount.current = 0;\n    };\n    const onClick = (event) => {\n        onPaneClick?.(event);\n        store.getState().resetSelectedElements();\n        store.setState({ nodesSelectionActive: false });\n    };\n    const onContextMenu = (event) => {\n        if (Array.isArray(panOnDrag) && panOnDrag?.includes(2)) {\n            event.preventDefault();\n            return;\n        }\n        onPaneContextMenu?.(event);\n    };\n    const onWheel = onPaneScroll ? (event) => onPaneScroll(event) : undefined;\n    const onMouseDown = (event) => {\n        const { resetSelectedElements, domNode } = store.getState();\n        containerBounds.current = domNode?.getBoundingClientRect();\n        if (!elementsSelectable ||\n            !isSelecting ||\n            event.button !== 0 ||\n            event.target !== container.current ||\n            !containerBounds.current) {\n            return;\n        }\n        const { x, y } = getEventPosition(event, containerBounds.current);\n        resetSelectedElements();\n        store.setState({\n            userSelectionRect: {\n                width: 0,\n                height: 0,\n                startX: x,\n                startY: y,\n                x,\n                y,\n            },\n        });\n        onSelectionStart?.(event);\n    };\n    const onMouseMove = (event) => {\n        const { userSelectionRect, nodeInternals, edges, transform, onNodesChange, onEdgesChange, nodeOrigin, getNodes } = store.getState();\n        if (!isSelecting || !containerBounds.current || !userSelectionRect) {\n            return;\n        }\n        store.setState({ userSelectionActive: true, nodesSelectionActive: false });\n        const mousePos = getEventPosition(event, containerBounds.current);\n        const startX = userSelectionRect.startX ?? 0;\n        const startY = userSelectionRect.startY ?? 0;\n        const nextUserSelectRect = {\n            ...userSelectionRect,\n            x: mousePos.x < startX ? mousePos.x : startX,\n            y: mousePos.y < startY ? mousePos.y : startY,\n            width: Math.abs(mousePos.x - startX),\n            height: Math.abs(mousePos.y - startY),\n        };\n        const nodes = getNodes();\n        const selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true, nodeOrigin);\n        const selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map((e) => e.id);\n        const selectedNodeIds = selectedNodes.map((n) => n.id);\n        if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\n            prevSelectedNodesCount.current = selectedNodeIds.length;\n            const changes = getSelectionChanges(nodes, selectedNodeIds);\n            if (changes.length) {\n                onNodesChange?.(changes);\n            }\n        }\n        if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\n            prevSelectedEdgesCount.current = selectedEdgeIds.length;\n            const changes = getSelectionChanges(edges, selectedEdgeIds);\n            if (changes.length) {\n                onEdgesChange?.(changes);\n            }\n        }\n        store.setState({\n            userSelectionRect: nextUserSelectRect,\n        });\n    };\n    const onMouseUp = (event) => {\n        if (event.button !== 0) {\n            return;\n        }\n        const { userSelectionRect } = store.getState();\n        // We only want to trigger click functions when in selection mode if\n        // the user did not move the mouse.\n        if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n            onClick?.(event);\n        }\n        store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n        resetUserSelection();\n        onSelectionEnd?.(event);\n    };\n    const onMouseLeave = (event) => {\n        if (userSelectionActive) {\n            store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n            onSelectionEnd?.(event);\n        }\n        resetUserSelection();\n    };\n    const hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n    return (jsxs(\"div\", { className: cc(['react-flow__pane', { dragging, selection: isSelecting }]), onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container), onContextMenu: wrapHandler(onContextMenu, container), onWheel: wrapHandler(onWheel, container), onMouseEnter: hasActiveSelection ? undefined : onPaneMouseEnter, onMouseDown: hasActiveSelection ? onMouseDown : undefined, onMouseMove: hasActiveSelection ? onMouseMove : onPaneMouseMove, onMouseUp: hasActiveSelection ? onMouseUp : undefined, onMouseLeave: hasActiveSelection ? onMouseLeave : onPaneMouseLeave, ref: container, style: containerStyle, children: [children, jsx(UserSelection, {})] }));\n});\nPane.displayName = 'Pane';\n\nfunction isParentSelected(node, nodeInternals) {\n    if (!node.parentNode) {\n        return false;\n    }\n    const parentNode = nodeInternals.get(node.parentNode);\n    if (!parentNode) {\n        return false;\n    }\n    if (parentNode.selected) {\n        return true;\n    }\n    return isParentSelected(parentNode, nodeInternals);\n}\nfunction hasSelector(target, selector, nodeRef) {\n    let current = target;\n    do {\n        if (current?.matches(selector))\n            return true;\n        if (current === nodeRef.current)\n            return false;\n        current = current.parentElement;\n    } while (current);\n    return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeInternals, nodesDraggable, mousePos, nodeId) {\n    return Array.from(nodeInternals.values())\n        .filter((n) => (n.selected || n.id === nodeId) &&\n        (!n.parentNode || !isParentSelected(n, nodeInternals)) &&\n        (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')))\n        .map((n) => ({\n        id: n.id,\n        position: n.position || { x: 0, y: 0 },\n        positionAbsolute: n.positionAbsolute || { x: 0, y: 0 },\n        distance: {\n            x: mousePos.x - (n.positionAbsolute?.x ?? 0),\n            y: mousePos.y - (n.positionAbsolute?.y ?? 0),\n        },\n        delta: {\n            x: 0,\n            y: 0,\n        },\n        extent: n.extent,\n        parentNode: n.parentNode,\n        width: n.width,\n        height: n.height,\n    }));\n}\nfunction clampNodeExtent(node, extent) {\n    if (!extent || extent === 'parent') {\n        return extent;\n    }\n    return [extent[0], [extent[1][0] - (node.width || 0), extent[1][1] - (node.height || 0)]];\n}\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent, nodeOrigin = [0, 0], onError) {\n    const clampedNodeExtent = clampNodeExtent(node, node.extent || nodeExtent);\n    let currentExtent = clampedNodeExtent;\n    if (node.extent === 'parent') {\n        if (node.parentNode && node.width && node.height) {\n            const parent = nodeInternals.get(node.parentNode);\n            const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n            currentExtent =\n                parent && isNumeric(parentX) && isNumeric(parentY) && isNumeric(parent.width) && isNumeric(parent.height)\n                    ? [\n                        [parentX + node.width * nodeOrigin[0], parentY + node.height * nodeOrigin[1]],\n                        [\n                            parentX + parent.width - node.width + node.width * nodeOrigin[0],\n                            parentY + parent.height - node.height + node.height * nodeOrigin[1],\n                        ],\n                    ]\n                    : currentExtent;\n        }\n        else {\n            onError?.('005', errorMessages['error005']());\n            currentExtent = clampedNodeExtent;\n        }\n    }\n    else if (node.extent && node.parentNode) {\n        const parent = nodeInternals.get(node.parentNode);\n        const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n        currentExtent = [\n            [node.extent[0][0] + parentX, node.extent[0][1] + parentY],\n            [node.extent[1][0] + parentX, node.extent[1][1] + parentY],\n        ];\n    }\n    let parentPosition = { x: 0, y: 0 };\n    if (node.parentNode) {\n        const parentNode = nodeInternals.get(node.parentNode);\n        parentPosition = getNodePositionWithOrigin(parentNode, nodeOrigin).positionAbsolute;\n    }\n    const positionAbsolute = currentExtent && currentExtent !== 'parent'\n        ? clampPosition(nextPosition, currentExtent)\n        : nextPosition;\n    return {\n        position: {\n            x: positionAbsolute.x - parentPosition.x,\n            y: positionAbsolute.y - parentPosition.y,\n        },\n        positionAbsolute,\n    };\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams({ nodeId, dragItems, nodeInternals, }) {\n    const extentedDragItems = dragItems.map((n) => {\n        const node = nodeInternals.get(n.id);\n        return {\n            ...node,\n            position: n.position,\n            positionAbsolute: n.positionAbsolute,\n        };\n    });\n    return [nodeId ? extentedDragItems.find((n) => n.id === nodeId) : extentedDragItems[0], extentedDragItems];\n}\n\nconst getHandleBounds = (selector, nodeElement, zoom, nodeOrigin) => {\n    const handles = nodeElement.querySelectorAll(selector);\n    if (!handles || !handles.length) {\n        return null;\n    }\n    const handlesArray = Array.from(handles);\n    const nodeBounds = nodeElement.getBoundingClientRect();\n    const nodeOffset = {\n        x: nodeBounds.width * nodeOrigin[0],\n        y: nodeBounds.height * nodeOrigin[1],\n    };\n    return handlesArray.map((handle) => {\n        const handleBounds = handle.getBoundingClientRect();\n        return {\n            id: handle.getAttribute('data-handleid'),\n            position: handle.getAttribute('data-handlepos'),\n            x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\n            y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom,\n            ...getDimensions(handle),\n        };\n    });\n};\nfunction getMouseHandler(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const node = getState().nodeInternals.get(id);\n            if (node) {\n                handler(event, { ...node });\n            }\n        };\n}\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick({ id, store, unselect = false, nodeRef, }) {\n    const { addSelectedNodes, unselectNodesAndEdges, multiSelectionActive, nodeInternals, onError } = store.getState();\n    const node = nodeInternals.get(id);\n    if (!node) {\n        onError?.('012', errorMessages['error012'](id));\n        return;\n    }\n    store.setState({ nodesSelectionActive: false });\n    if (!node.selected) {\n        addSelectedNodes([id]);\n    }\n    else if (unselect || (node.selected && multiSelectionActive)) {\n        unselectNodesAndEdges({ nodes: [node] });\n        requestAnimationFrame(() => nodeRef?.current?.blur());\n    }\n}\n\nfunction useGetPointerPosition() {\n    const store = useStoreApi();\n    // returns the pointer position projected to the RF coordinate system\n    const getPointerPosition = useCallback(({ sourceEvent }) => {\n        const { transform, snapGrid, snapToGrid } = store.getState();\n        const x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\n        const y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\n        const pointerPos = {\n            x: (x - transform[0]) / transform[2],\n            y: (y - transform[1]) / transform[2],\n        };\n        // we need the snapped position in order to be able to skip unnecessary drag events\n        return {\n            xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\n            ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y,\n            ...pointerPos,\n        };\n    }, []);\n    return getPointerPosition;\n}\n\nfunction wrapSelectionDragFunc(selectionFunc) {\n    return (event, _, nodes) => selectionFunc?.(event, nodes);\n}\nfunction useDrag({ nodeRef, disabled = false, noDragClassName, handleSelector, nodeId, isSelectable, selectNodesOnDrag, }) {\n    const store = useStoreApi();\n    const [dragging, setDragging] = useState(false);\n    const dragItems = useRef([]);\n    const lastPos = useRef({ x: null, y: null });\n    const autoPanId = useRef(0);\n    const containerBounds = useRef(null);\n    const mousePosition = useRef({ x: 0, y: 0 });\n    const dragEvent = useRef(null);\n    const autoPanStarted = useRef(false);\n    const getPointerPosition = useGetPointerPosition();\n    useEffect(() => {\n        if (nodeRef?.current) {\n            const selection = select(nodeRef.current);\n            const updateNodes = ({ x, y }) => {\n                const { nodeInternals, onNodeDrag, onSelectionDrag, updateNodePositions, nodeExtent, snapGrid, snapToGrid, nodeOrigin, onError, } = store.getState();\n                lastPos.current = { x, y };\n                let hasChange = false;\n                let nodesBox = { x: 0, y: 0, x2: 0, y2: 0 };\n                if (dragItems.current.length > 1 && nodeExtent) {\n                    const rect = getRectOfNodes(dragItems.current, nodeOrigin);\n                    nodesBox = rectToBox(rect);\n                }\n                dragItems.current = dragItems.current.map((n) => {\n                    const nextPosition = { x: x - n.distance.x, y: y - n.distance.y };\n                    if (snapToGrid) {\n                        nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                        nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                    }\n                    // if there is selection with multiple nodes and a node extent is set, we need to adjust the node extent for each node\n                    // based on its position so that the node stays at it's position relative to the selection.\n                    const adjustedNodeExtent = [\n                        [nodeExtent[0][0], nodeExtent[0][1]],\n                        [nodeExtent[1][0], nodeExtent[1][1]],\n                    ];\n                    if (dragItems.current.length > 1 && nodeExtent && !n.extent) {\n                        adjustedNodeExtent[0][0] = n.positionAbsolute.x - nodesBox.x + nodeExtent[0][0];\n                        adjustedNodeExtent[1][0] = n.positionAbsolute.x + (n.width ?? 0) - nodesBox.x2 + nodeExtent[1][0];\n                        adjustedNodeExtent[0][1] = n.positionAbsolute.y - nodesBox.y + nodeExtent[0][1];\n                        adjustedNodeExtent[1][1] = n.positionAbsolute.y + (n.height ?? 0) - nodesBox.y2 + nodeExtent[1][1];\n                    }\n                    const updatedPos = calcNextPosition(n, nextPosition, nodeInternals, adjustedNodeExtent, nodeOrigin, onError);\n                    // we want to make sure that we only fire a change event when there is a change\n                    hasChange = hasChange || n.position.x !== updatedPos.position.x || n.position.y !== updatedPos.position.y;\n                    n.position = updatedPos.position;\n                    n.positionAbsolute = updatedPos.positionAbsolute;\n                    return n;\n                });\n                if (!hasChange) {\n                    return;\n                }\n                updateNodePositions(dragItems.current, true, true);\n                setDragging(true);\n                const onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\n                if (onDrag && dragEvent.current) {\n                    const [currentNode, nodes] = getEventHandlerParams({\n                        nodeId,\n                        dragItems: dragItems.current,\n                        nodeInternals,\n                    });\n                    onDrag(dragEvent.current, currentNode, nodes);\n                }\n            };\n            const autoPan = () => {\n                if (!containerBounds.current) {\n                    return;\n                }\n                const [xMovement, yMovement] = calcAutoPan(mousePosition.current, containerBounds.current);\n                if (xMovement !== 0 || yMovement !== 0) {\n                    const { transform, panBy } = store.getState();\n                    lastPos.current.x = (lastPos.current.x ?? 0) - xMovement / transform[2];\n                    lastPos.current.y = (lastPos.current.y ?? 0) - yMovement / transform[2];\n                    if (panBy({ x: xMovement, y: yMovement })) {\n                        updateNodes(lastPos.current);\n                    }\n                }\n                autoPanId.current = requestAnimationFrame(autoPan);\n            };\n            if (disabled) {\n                selection.on('.drag', null);\n            }\n            else {\n                const dragHandler = drag()\n                    .on('start', (event) => {\n                    const { nodeInternals, multiSelectionActive, domNode, nodesDraggable, unselectNodesAndEdges, onNodeDragStart, onSelectionDragStart, } = store.getState();\n                    const onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\n                    if (!selectNodesOnDrag && !multiSelectionActive && nodeId) {\n                        if (!nodeInternals.get(nodeId)?.selected) {\n                            // we need to reset selected nodes when selectNodesOnDrag=false\n                            unselectNodesAndEdges();\n                        }\n                    }\n                    if (nodeId && isSelectable && selectNodesOnDrag) {\n                        handleNodeClick({\n                            id: nodeId,\n                            store,\n                            nodeRef: nodeRef,\n                        });\n                    }\n                    const pointerPos = getPointerPosition(event);\n                    lastPos.current = pointerPos;\n                    dragItems.current = getDragItems(nodeInternals, nodesDraggable, pointerPos, nodeId);\n                    if (onStart && dragItems.current) {\n                        const [currentNode, nodes] = getEventHandlerParams({\n                            nodeId,\n                            dragItems: dragItems.current,\n                            nodeInternals,\n                        });\n                        onStart(event.sourceEvent, currentNode, nodes);\n                    }\n                    containerBounds.current = domNode?.getBoundingClientRect() || null;\n                    mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                })\n                    .on('drag', (event) => {\n                    const pointerPos = getPointerPosition(event);\n                    const { autoPanOnNodeDrag } = store.getState();\n                    if (!autoPanStarted.current && autoPanOnNodeDrag) {\n                        autoPanStarted.current = true;\n                        autoPan();\n                    }\n                    // skip events without movement\n                    if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) &&\n                        dragItems.current) {\n                        dragEvent.current = event.sourceEvent;\n                        mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                        updateNodes(pointerPos);\n                    }\n                })\n                    .on('end', (event) => {\n                    setDragging(false);\n                    autoPanStarted.current = false;\n                    cancelAnimationFrame(autoPanId.current);\n                    if (dragItems.current) {\n                        const { updateNodePositions, nodeInternals, onNodeDragStop, onSelectionDragStop } = store.getState();\n                        const onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\n                        updateNodePositions(dragItems.current, false, false);\n                        if (onStop) {\n                            const [currentNode, nodes] = getEventHandlerParams({\n                                nodeId,\n                                dragItems: dragItems.current,\n                                nodeInternals,\n                            });\n                            onStop(event.sourceEvent, currentNode, nodes);\n                        }\n                    }\n                })\n                    .filter((event) => {\n                    const target = event.target;\n                    const isDraggable = !event.button &&\n                        (!noDragClassName || !hasSelector(target, `.${noDragClassName}`, nodeRef)) &&\n                        (!handleSelector || hasSelector(target, handleSelector, nodeRef));\n                    return isDraggable;\n                });\n                selection.call(dragHandler);\n                return () => {\n                    selection.on('.drag', null);\n                };\n            }\n        }\n    }, [\n        nodeRef,\n        disabled,\n        noDragClassName,\n        handleSelector,\n        isSelectable,\n        store,\n        nodeId,\n        selectNodesOnDrag,\n        getPointerPosition,\n    ]);\n    return dragging;\n}\n\nfunction useUpdateNodePositions() {\n    const store = useStoreApi();\n    const updatePositions = useCallback((params) => {\n        const { nodeInternals, nodeExtent, updateNodePositions, getNodes, snapToGrid, snapGrid, onError, nodesDraggable } = store.getState();\n        const selectedNodes = getNodes().filter((n) => n.selected && (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')));\n        // by default a node moves 5px on each key press, or 20px if shift is pressed\n        // if snap grid is enabled, we use that for the velocity.\n        const xVelo = snapToGrid ? snapGrid[0] : 5;\n        const yVelo = snapToGrid ? snapGrid[1] : 5;\n        const factor = params.isShiftPressed ? 4 : 1;\n        const positionDiffX = params.x * xVelo * factor;\n        const positionDiffY = params.y * yVelo * factor;\n        const nodeUpdates = selectedNodes.map((n) => {\n            if (n.positionAbsolute) {\n                const nextPosition = { x: n.positionAbsolute.x + positionDiffX, y: n.positionAbsolute.y + positionDiffY };\n                if (snapToGrid) {\n                    nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                    nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                }\n                const { positionAbsolute, position } = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, undefined, onError);\n                n.position = position;\n                n.positionAbsolute = positionAbsolute;\n            }\n            return n;\n        });\n        updateNodePositions(nodeUpdates, true, false);\n    }, []);\n    return updatePositions;\n}\n\nconst arrowKeyDiffs = {\n    ArrowUp: { x: 0, y: -1 },\n    ArrowDown: { x: 0, y: 1 },\n    ArrowLeft: { x: -1, y: 0 },\n    ArrowRight: { x: 1, y: 0 },\n};\nvar wrapNode = (NodeComponent) => {\n    const NodeWrapper = ({ id, type, data, xPos, yPos, xPosOrigin, yPosOrigin, selected, onClick, onMouseEnter, onMouseMove, onMouseLeave, onContextMenu, onDoubleClick, style, className, isDraggable, isSelectable, isConnectable, isFocusable, selectNodesOnDrag, sourcePosition, targetPosition, hidden, resizeObserver, dragHandle, zIndex, isParent, noDragClassName, noPanClassName, initialized, disableKeyboardA11y, ariaLabel, rfId, }) => {\n        const store = useStoreApi();\n        const nodeRef = useRef(null);\n        const prevSourcePosition = useRef(sourcePosition);\n        const prevTargetPosition = useRef(targetPosition);\n        const prevType = useRef(type);\n        const hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n        const updatePositions = useUpdateNodePositions();\n        const onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\n        const onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\n        const onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\n        const onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\n        const onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\n        const onSelectNodeHandler = (event) => {\n            if (isSelectable && (!selectNodesOnDrag || !isDraggable)) {\n                // this handler gets called within the drag start event when selectNodesOnDrag=true\n                handleNodeClick({\n                    id,\n                    store,\n                    nodeRef,\n                });\n            }\n            if (onClick) {\n                const node = store.getState().nodeInternals.get(id);\n                if (node) {\n                    onClick(event, { ...node });\n                }\n            }\n        };\n        const onKeyDown = (event) => {\n            if (isInputDOMNode(event)) {\n                return;\n            }\n            if (elementSelectionKeys.includes(event.key) && isSelectable) {\n                const unselect = event.key === 'Escape';\n                handleNodeClick({\n                    id,\n                    store,\n                    unselect,\n                    nodeRef,\n                });\n            }\n            else if (!disableKeyboardA11y &&\n                isDraggable &&\n                selected &&\n                Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n                store.setState({\n                    ariaLiveMessage: `Moved selected node ${event.key\n                        .replace('Arrow', '')\n                        .toLowerCase()}. New position, x: ${~~xPos}, y: ${~~yPos}`,\n                });\n                updatePositions({\n                    x: arrowKeyDiffs[event.key].x,\n                    y: arrowKeyDiffs[event.key].y,\n                    isShiftPressed: event.shiftKey,\n                });\n            }\n        };\n        useEffect(() => {\n            if (nodeRef.current && !hidden) {\n                const currNode = nodeRef.current;\n                resizeObserver?.observe(currNode);\n                return () => resizeObserver?.unobserve(currNode);\n            }\n        }, [hidden]);\n        useEffect(() => {\n            // when the user programmatically changes the source or handle position, we re-initialize the node\n            const typeChanged = prevType.current !== type;\n            const sourcePosChanged = prevSourcePosition.current !== sourcePosition;\n            const targetPosChanged = prevTargetPosition.current !== targetPosition;\n            if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\n                if (typeChanged) {\n                    prevType.current = type;\n                }\n                if (sourcePosChanged) {\n                    prevSourcePosition.current = sourcePosition;\n                }\n                if (targetPosChanged) {\n                    prevTargetPosition.current = targetPosition;\n                }\n                store.getState().updateNodeDimensions([{ id, nodeElement: nodeRef.current, forceUpdate: true }]);\n            }\n        }, [id, type, sourcePosition, targetPosition]);\n        const dragging = useDrag({\n            nodeRef,\n            disabled: hidden || !isDraggable,\n            noDragClassName,\n            handleSelector: dragHandle,\n            nodeId: id,\n            isSelectable,\n            selectNodesOnDrag,\n        });\n        if (hidden) {\n            return null;\n        }\n        return (jsx(\"div\", { className: cc([\n                'react-flow__node',\n                `react-flow__node-${type}`,\n                {\n                    // this is overwritable by passing `nopan` as a class name\n                    [noPanClassName]: isDraggable,\n                },\n                className,\n                {\n                    selected,\n                    selectable: isSelectable,\n                    parent: isParent,\n                    dragging,\n                },\n            ]), ref: nodeRef, style: {\n                zIndex,\n                transform: `translate(${xPosOrigin}px,${yPosOrigin}px)`,\n                pointerEvents: hasPointerEvents ? 'all' : 'none',\n                visibility: initialized ? 'visible' : 'hidden',\n                ...style,\n            }, \"data-id\": id, \"data-testid\": `rf__node-${id}`, onMouseEnter: onMouseEnterHandler, onMouseMove: onMouseMoveHandler, onMouseLeave: onMouseLeaveHandler, onContextMenu: onContextMenuHandler, onClick: onSelectNodeHandler, onDoubleClick: onDoubleClickHandler, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : undefined, \"aria-describedby\": disableKeyboardA11y ? undefined : `${ARIA_NODE_DESC_KEY}-${rfId}`, \"aria-label\": ariaLabel, children: jsx(Provider, { value: id, children: jsx(NodeComponent, { id: id, data: data, type: type, xPos: xPos, yPos: yPos, selected: selected, isConnectable: isConnectable, sourcePosition: sourcePosition, targetPosition: targetPosition, dragging: dragging, dragHandle: dragHandle, zIndex: zIndex }) }) }));\n    };\n    NodeWrapper.displayName = 'NodeWrapper';\n    return memo(NodeWrapper);\n};\n\nconst selector$7 = (s) => {\n    const selectedNodes = s.getNodes().filter((n) => n.selected);\n    return {\n        ...getRectOfNodes(selectedNodes, s.nodeOrigin),\n        transformString: `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`,\n        userSelectionActive: s.userSelectionActive,\n    };\n};\nfunction NodesSelection({ onSelectionContextMenu, noPanClassName, disableKeyboardA11y }) {\n    const store = useStoreApi();\n    const { width, height, x: left, y: top, transformString, userSelectionActive } = useStore(selector$7, shallow);\n    const updatePositions = useUpdateNodePositions();\n    const nodeRef = useRef(null);\n    useEffect(() => {\n        if (!disableKeyboardA11y) {\n            nodeRef.current?.focus({\n                preventScroll: true,\n            });\n        }\n    }, [disableKeyboardA11y]);\n    useDrag({\n        nodeRef,\n    });\n    if (userSelectionActive || !width || !height) {\n        return null;\n    }\n    const onContextMenu = onSelectionContextMenu\n        ? (event) => {\n            const selectedNodes = store\n                .getState()\n                .getNodes()\n                .filter((n) => n.selected);\n            onSelectionContextMenu(event, selectedNodes);\n        }\n        : undefined;\n    const onKeyDown = (event) => {\n        if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n            updatePositions({\n                x: arrowKeyDiffs[event.key].x,\n                y: arrowKeyDiffs[event.key].y,\n                isShiftPressed: event.shiftKey,\n            });\n        }\n    };\n    return (jsx(\"div\", { className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]), style: {\n            transform: transformString,\n        }, children: jsx(\"div\", { ref: nodeRef, className: \"react-flow__nodesselection-rect\", onContextMenu: onContextMenu, tabIndex: disableKeyboardA11y ? undefined : -1, onKeyDown: disableKeyboardA11y ? undefined : onKeyDown, style: {\n                width,\n                height,\n                top,\n                left,\n            } }) }));\n}\nvar NodesSelection$1 = memo(NodesSelection);\n\nconst selector$6 = (s) => s.nodesSelectionActive;\nconst FlowRenderer = ({ children, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneContextMenu, onPaneScroll, deleteKeyCode, onMove, onMoveStart, onMoveEnd, selectionKeyCode, selectionOnDrag, selectionMode, onSelectionStart, onSelectionEnd, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, elementsSelectable, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag: _panOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, onSelectionContextMenu, noWheelClassName, noPanClassName, disableKeyboardA11y, }) => {\n    const nodesSelectionActive = useStore(selector$6);\n    const selectionKeyPressed = useKeyPress(selectionKeyCode);\n    const panActivationKeyPressed = useKeyPress(panActivationKeyCode);\n    const panOnDrag = panActivationKeyPressed || _panOnDrag;\n    const isSelecting = selectionKeyPressed || (selectionOnDrag && panOnDrag !== true);\n    useGlobalKeyHandler({ deleteKeyCode, multiSelectionKeyCode });\n    return (jsx(ZoomPane, { onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onPaneContextMenu: onPaneContextMenu, elementsSelectable: elementsSelectable, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, zoomOnDoubleClick: zoomOnDoubleClick, panOnDrag: !selectionKeyPressed && panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, zoomActivationKeyCode: zoomActivationKeyCode, preventScrolling: preventScrolling, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, children: jsxs(Pane, { onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, panOnDrag: panOnDrag, isSelecting: !!isSelecting, selectionMode: selectionMode, children: [children, nodesSelectionActive && (jsx(NodesSelection$1, { onSelectionContextMenu: onSelectionContextMenu, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y }))] }) }));\n};\nFlowRenderer.displayName = 'FlowRenderer';\nvar FlowRenderer$1 = memo(FlowRenderer);\n\nfunction useVisibleNodes(onlyRenderVisible) {\n    const nodes = useStore(useCallback((s) => onlyRenderVisible\n        ? getNodesInside(s.nodeInternals, { x: 0, y: 0, width: s.width, height: s.height }, s.transform, true)\n        : s.getNodes(), [onlyRenderVisible]));\n    return nodes;\n}\n\nfunction createNodeTypes(nodeTypes) {\n    const standardTypes = {\n        input: wrapNode((nodeTypes.input || InputNode$1)),\n        default: wrapNode((nodeTypes.default || DefaultNode$1)),\n        output: wrapNode((nodeTypes.output || OutputNode$1)),\n        group: wrapNode((nodeTypes.group || GroupNode)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(nodeTypes)\n        .filter((k) => !['input', 'default', 'output', 'group'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapNode((nodeTypes[key] || DefaultNode$1));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nconst getPositionWithOrigin = ({ x, y, width, height, origin, }) => {\n    if (!width || !height) {\n        return { x, y };\n    }\n    if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\n        return { x, y };\n    }\n    return {\n        x: x - width * origin[0],\n        y: y - height * origin[1],\n    };\n};\n\nconst selector$5 = (s) => ({\n    nodesDraggable: s.nodesDraggable,\n    nodesConnectable: s.nodesConnectable,\n    nodesFocusable: s.nodesFocusable,\n    elementsSelectable: s.elementsSelectable,\n    updateNodeDimensions: s.updateNodeDimensions,\n    onError: s.onError,\n});\nconst NodeRenderer = (props) => {\n    const { nodesDraggable, nodesConnectable, nodesFocusable, elementsSelectable, updateNodeDimensions, onError } = useStore(selector$5, shallow);\n    const nodes = useVisibleNodes(props.onlyRenderVisibleElements);\n    const resizeObserverRef = useRef();\n    const resizeObserver = useMemo(() => {\n        if (typeof ResizeObserver === 'undefined') {\n            return null;\n        }\n        const observer = new ResizeObserver((entries) => {\n            const updates = entries.map((entry) => ({\n                id: entry.target.getAttribute('data-id'),\n                nodeElement: entry.target,\n                forceUpdate: true,\n            }));\n            updateNodeDimensions(updates);\n        });\n        resizeObserverRef.current = observer;\n        return observer;\n    }, []);\n    useEffect(() => {\n        return () => {\n            resizeObserverRef?.current?.disconnect();\n        };\n    }, []);\n    return (jsx(\"div\", { className: \"react-flow__nodes\", style: containerStyle, children: nodes.map((node) => {\n            let nodeType = node.type || 'default';\n            if (!props.nodeTypes[nodeType]) {\n                onError?.('003', errorMessages['error003'](nodeType));\n                nodeType = 'default';\n            }\n            const NodeComponent = (props.nodeTypes[nodeType] || props.nodeTypes.default);\n            const isDraggable = !!(node.draggable || (nodesDraggable && typeof node.draggable === 'undefined'));\n            const isSelectable = !!(node.selectable || (elementsSelectable && typeof node.selectable === 'undefined'));\n            const isConnectable = !!(node.connectable || (nodesConnectable && typeof node.connectable === 'undefined'));\n            const isFocusable = !!(node.focusable || (nodesFocusable && typeof node.focusable === 'undefined'));\n            const clampedPosition = props.nodeExtent\n                ? clampPosition(node.positionAbsolute, props.nodeExtent)\n                : node.positionAbsolute;\n            const posX = clampedPosition?.x ?? 0;\n            const posY = clampedPosition?.y ?? 0;\n            const posOrigin = getPositionWithOrigin({\n                x: posX,\n                y: posY,\n                width: node.width ?? 0,\n                height: node.height ?? 0,\n                origin: props.nodeOrigin,\n            });\n            return (jsx(NodeComponent, { id: node.id, className: node.className, style: node.style, type: nodeType, data: node.data, sourcePosition: node.sourcePosition || Position.Bottom, targetPosition: node.targetPosition || Position.Top, hidden: node.hidden, xPos: posX, yPos: posY, xPosOrigin: posOrigin.x, yPosOrigin: posOrigin.y, selectNodesOnDrag: props.selectNodesOnDrag, onClick: props.onNodeClick, onMouseEnter: props.onNodeMouseEnter, onMouseMove: props.onNodeMouseMove, onMouseLeave: props.onNodeMouseLeave, onContextMenu: props.onNodeContextMenu, onDoubleClick: props.onNodeDoubleClick, selected: !!node.selected, isDraggable: isDraggable, isSelectable: isSelectable, isConnectable: isConnectable, isFocusable: isFocusable, resizeObserver: resizeObserver, dragHandle: node.dragHandle, zIndex: node[internalsSymbol]?.z ?? 0, isParent: !!node[internalsSymbol]?.isParent, noDragClassName: props.noDragClassName, noPanClassName: props.noPanClassName, initialized: !!node.width && !!node.height, rfId: props.rfId, disableKeyboardA11y: props.disableKeyboardA11y, ariaLabel: node.ariaLabel }, node.id));\n        }) }));\n};\nNodeRenderer.displayName = 'NodeRenderer';\nvar NodeRenderer$1 = memo(NodeRenderer);\n\nconst shiftX = (x, shift, position) => {\n    if (position === Position.Left)\n        return x - shift;\n    if (position === Position.Right)\n        return x + shift;\n    return x;\n};\nconst shiftY = (y, shift, position) => {\n    if (position === Position.Top)\n        return y - shift;\n    if (position === Position.Bottom)\n        return y + shift;\n    return y;\n};\nconst EdgeUpdaterClassName = 'react-flow__edgeupdater';\nconst EdgeAnchor = ({ position, centerX, centerY, radius = 10, onMouseDown, onMouseEnter, onMouseOut, type, }) => (jsx(\"circle\", { onMouseDown: onMouseDown, onMouseEnter: onMouseEnter, onMouseOut: onMouseOut, className: cc([EdgeUpdaterClassName, `${EdgeUpdaterClassName}-${type}`]), cx: shiftX(centerX, radius, position), cy: shiftY(centerY, radius, position), r: radius, stroke: \"transparent\", fill: \"transparent\" }));\n\nconst alwaysValidConnection = () => true;\nvar wrapEdge = (EdgeComponent) => {\n    const EdgeWrapper = ({ id, className, type, data, onClick, onEdgeDoubleClick, selected, animated, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, source, target, sourceX, sourceY, targetX, targetY, sourcePosition, targetPosition, elementsSelectable, hidden, sourceHandleId, targetHandleId, onContextMenu, onMouseEnter, onMouseMove, onMouseLeave, edgeUpdaterRadius, onEdgeUpdate, onEdgeUpdateStart, onEdgeUpdateEnd, markerEnd, markerStart, rfId, ariaLabel, isFocusable, isUpdatable, pathOptions, interactionWidth, }) => {\n        const edgeRef = useRef(null);\n        const [updateHover, setUpdateHover] = useState(false);\n        const [updating, setUpdating] = useState(false);\n        const store = useStoreApi();\n        const markerStartUrl = useMemo(() => `url(#${getMarkerId(markerStart, rfId)})`, [markerStart, rfId]);\n        const markerEndUrl = useMemo(() => `url(#${getMarkerId(markerEnd, rfId)})`, [markerEnd, rfId]);\n        if (hidden) {\n            return null;\n        }\n        const onEdgeClick = (event) => {\n            const { edges, addSelectedEdges } = store.getState();\n            if (elementsSelectable) {\n                store.setState({ nodesSelectionActive: false });\n                addSelectedEdges([id]);\n            }\n            if (onClick) {\n                const edge = edges.find((e) => e.id === id);\n                onClick(event, edge);\n            }\n        };\n        const onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\n        const onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\n        const onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\n        const onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\n        const onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\n        const handleEdgeUpdater = (event, isSourceHandle) => {\n            // avoid triggering edge updater if mouse btn is not left\n            if (event.button !== 0) {\n                return;\n            }\n            const { edges, isValidConnection: isValidConnectionStore } = store.getState();\n            const nodeId = isSourceHandle ? target : source;\n            const handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\n            const handleType = isSourceHandle ? 'target' : 'source';\n            const isValidConnection = isValidConnectionStore || alwaysValidConnection;\n            const isTarget = isSourceHandle;\n            const edge = edges.find((e) => e.id === id);\n            setUpdating(true);\n            onEdgeUpdateStart?.(event, edge, handleType);\n            const _onEdgeUpdateEnd = (evt) => {\n                setUpdating(false);\n                onEdgeUpdateEnd?.(evt, edge, handleType);\n            };\n            const onConnectEdge = (connection) => onEdgeUpdate?.(edge, connection);\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectEdge,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection,\n                edgeUpdaterType: handleType,\n                onEdgeUpdateEnd: _onEdgeUpdateEnd,\n            });\n        };\n        const onEdgeUpdaterSourceMouseDown = (event) => handleEdgeUpdater(event, true);\n        const onEdgeUpdaterTargetMouseDown = (event) => handleEdgeUpdater(event, false);\n        const onEdgeUpdaterMouseEnter = () => setUpdateHover(true);\n        const onEdgeUpdaterMouseOut = () => setUpdateHover(false);\n        const inactive = !elementsSelectable && !onClick;\n        const onKeyDown = (event) => {\n            if (elementSelectionKeys.includes(event.key) && elementsSelectable) {\n                const { unselectNodesAndEdges, addSelectedEdges, edges } = store.getState();\n                const unselect = event.key === 'Escape';\n                if (unselect) {\n                    edgeRef.current?.blur();\n                    unselectNodesAndEdges({ edges: [edges.find((e) => e.id === id)] });\n                }\n                else {\n                    addSelectedEdges([id]);\n                }\n            }\n        };\n        return (jsxs(\"g\", { className: cc([\n                'react-flow__edge',\n                `react-flow__edge-${type}`,\n                className,\n                { selected, animated, inactive, updating: updateHover },\n            ]), onClick: onEdgeClick, onDoubleClick: onEdgeDoubleClickHandler, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : 'img', \"data-testid\": `rf__edge-${id}`, \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : `Edge from ${source} to ${target}`, \"aria-describedby\": isFocusable ? `${ARIA_EDGE_DESC_KEY}-${rfId}` : undefined, ref: edgeRef, children: [!updating && (jsx(EdgeComponent, { id: id, source: source, target: target, selected: selected, animated: animated, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, data: data, style: style, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, sourceHandleId: sourceHandleId, targetHandleId: targetHandleId, markerStart: markerStartUrl, markerEnd: markerEndUrl, pathOptions: pathOptions, interactionWidth: interactionWidth })), isUpdatable && (jsxs(Fragment, { children: [(isUpdatable === 'source' || isUpdatable === true) && (jsx(EdgeAnchor, { position: sourcePosition, centerX: sourceX, centerY: sourceY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterSourceMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"source\" })), (isUpdatable === 'target' || isUpdatable === true) && (jsx(EdgeAnchor, { position: targetPosition, centerX: targetX, centerY: targetY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterTargetMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"target\" }))] }))] }));\n    };\n    EdgeWrapper.displayName = 'EdgeWrapper';\n    return memo(EdgeWrapper);\n};\n\nfunction createEdgeTypes(edgeTypes) {\n    const standardTypes = {\n        default: wrapEdge((edgeTypes.default || BezierEdge)),\n        straight: wrapEdge((edgeTypes.bezier || StraightEdge)),\n        step: wrapEdge((edgeTypes.step || StepEdge)),\n        smoothstep: wrapEdge((edgeTypes.step || SmoothStepEdge)),\n        simplebezier: wrapEdge((edgeTypes.simplebezier || SimpleBezierEdge)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(edgeTypes)\n        .filter((k) => !['default', 'bezier'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapEdge((edgeTypes[key] || BezierEdge));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nfunction getHandlePosition(position, nodeRect, handle = null) {\n    const x = (handle?.x || 0) + nodeRect.x;\n    const y = (handle?.y || 0) + nodeRect.y;\n    const width = handle?.width || nodeRect.width;\n    const height = handle?.height || nodeRect.height;\n    switch (position) {\n        case Position.Top:\n            return {\n                x: x + width / 2,\n                y,\n            };\n        case Position.Right:\n            return {\n                x: x + width,\n                y: y + height / 2,\n            };\n        case Position.Bottom:\n            return {\n                x: x + width / 2,\n                y: y + height,\n            };\n        case Position.Left:\n            return {\n                x,\n                y: y + height / 2,\n            };\n    }\n}\nfunction getHandle(bounds, handleId) {\n    if (!bounds) {\n        return null;\n    }\n    if (bounds.length === 1 || !handleId) {\n        return bounds[0];\n    }\n    else if (handleId) {\n        return bounds.find((d) => d.id === handleId) || null;\n    }\n    return null;\n}\nconst getEdgePositions = (sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) => {\n    const sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\n    const targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\n    return {\n        sourceX: sourceHandlePos.x,\n        sourceY: sourceHandlePos.y,\n        targetX: targetHandlePos.x,\n        targetY: targetHandlePos.y,\n    };\n};\nfunction isEdgeVisible({ sourcePos, targetPos, sourceWidth, sourceHeight, targetWidth, targetHeight, width, height, transform, }) {\n    const edgeBox = {\n        x: Math.min(sourcePos.x, targetPos.x),\n        y: Math.min(sourcePos.y, targetPos.y),\n        x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\n        y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight),\n    };\n    if (edgeBox.x === edgeBox.x2) {\n        edgeBox.x2 += 1;\n    }\n    if (edgeBox.y === edgeBox.y2) {\n        edgeBox.y2 += 1;\n    }\n    const viewBox = rectToBox({\n        x: (0 - transform[0]) / transform[2],\n        y: (0 - transform[1]) / transform[2],\n        width: width / transform[2],\n        height: height / transform[2],\n    });\n    const xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\n    const yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\n    const overlappingArea = Math.ceil(xOverlap * yOverlap);\n    return overlappingArea > 0;\n}\nfunction getNodeData(node) {\n    const handleBounds = node?.[internalsSymbol]?.handleBounds || null;\n    const isValid = handleBounds &&\n        node?.width &&\n        node?.height &&\n        typeof node?.positionAbsolute?.x !== 'undefined' &&\n        typeof node?.positionAbsolute?.y !== 'undefined';\n    return [\n        {\n            x: node?.positionAbsolute?.x || 0,\n            y: node?.positionAbsolute?.y || 0,\n            width: node?.width || 0,\n            height: node?.height || 0,\n        },\n        handleBounds,\n        !!isValid,\n    ];\n}\n\nconst defaultEdgeTree = [{ level: 0, isMaxLevel: true, edges: [] }];\nfunction groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect = false) {\n    let maxLevel = -1;\n    const levelLookup = edges.reduce((tree, edge) => {\n        const hasZIndex = isNumeric(edge.zIndex);\n        let z = hasZIndex ? edge.zIndex : 0;\n        if (elevateEdgesOnSelect) {\n            const targetNode = nodeInternals.get(edge.target);\n            const sourceNode = nodeInternals.get(edge.source);\n            const edgeOrConnectedNodeSelected = edge.selected || targetNode?.selected || sourceNode?.selected;\n            const selectedZIndex = Math.max(sourceNode?.[internalsSymbol]?.z || 0, targetNode?.[internalsSymbol]?.z || 0, 1000);\n            z = (hasZIndex ? edge.zIndex : 0) + (edgeOrConnectedNodeSelected ? selectedZIndex : 0);\n        }\n        if (tree[z]) {\n            tree[z].push(edge);\n        }\n        else {\n            tree[z] = [edge];\n        }\n        maxLevel = z > maxLevel ? z : maxLevel;\n        return tree;\n    }, {});\n    const edgeTree = Object.entries(levelLookup).map(([key, edges]) => {\n        const level = +key;\n        return {\n            edges,\n            level,\n            isMaxLevel: level === maxLevel,\n        };\n    });\n    if (edgeTree.length === 0) {\n        return defaultEdgeTree;\n    }\n    return edgeTree;\n}\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\n    const edges = useStore(useCallback((s) => {\n        if (!onlyRenderVisible) {\n            return s.edges;\n        }\n        return s.edges.filter((e) => {\n            const sourceNode = nodeInternals.get(e.source);\n            const targetNode = nodeInternals.get(e.target);\n            return (sourceNode?.width &&\n                sourceNode?.height &&\n                targetNode?.width &&\n                targetNode?.height &&\n                isEdgeVisible({\n                    sourcePos: sourceNode.positionAbsolute || { x: 0, y: 0 },\n                    targetPos: targetNode.positionAbsolute || { x: 0, y: 0 },\n                    sourceWidth: sourceNode.width,\n                    sourceHeight: sourceNode.height,\n                    targetWidth: targetNode.width,\n                    targetHeight: targetNode.height,\n                    width: s.width,\n                    height: s.height,\n                    transform: s.transform,\n                }));\n        });\n    }, [onlyRenderVisible, nodeInternals]));\n    return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\n}\n\nconst ArrowSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (jsx(\"polyline\", { stroke: color, strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: strokeWidth, fill: \"none\", points: \"-5,-4 0,0 -5,4\" }));\n};\nconst ArrowClosedSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (jsx(\"polyline\", { stroke: color, strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: strokeWidth, fill: color, points: \"-5,-4 0,0 -5,4 -5,-4\" }));\n};\nconst MarkerSymbols = {\n    [MarkerType.Arrow]: ArrowSymbol,\n    [MarkerType.ArrowClosed]: ArrowClosedSymbol,\n};\nfunction useMarkerSymbol(type) {\n    const store = useStoreApi();\n    const symbol = useMemo(() => {\n        const symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n        if (!symbolExists) {\n            store.getState().onError?.('009', errorMessages['error009'](type));\n            return null;\n        }\n        return MarkerSymbols[type];\n    }, [type]);\n    return symbol;\n}\n\nconst Marker = ({ id, type, color, width = 12.5, height = 12.5, markerUnits = 'strokeWidth', strokeWidth, orient = 'auto-start-reverse', }) => {\n    const Symbol = useMarkerSymbol(type);\n    if (!Symbol) {\n        return null;\n    }\n    return (jsx(\"marker\", { className: \"react-flow__arrowhead\", id: id, markerWidth: `${width}`, markerHeight: `${height}`, viewBox: \"-10 -10 20 20\", markerUnits: markerUnits, orient: orient, refX: \"0\", refY: \"0\", children: jsx(Symbol, { color: color, strokeWidth: strokeWidth }) }));\n};\nconst markerSelector = ({ defaultColor, rfId }) => (s) => {\n    const ids = [];\n    return s.edges\n        .reduce((markers, edge) => {\n        [edge.markerStart, edge.markerEnd].forEach((marker) => {\n            if (marker && typeof marker === 'object') {\n                const markerId = getMarkerId(marker, rfId);\n                if (!ids.includes(markerId)) {\n                    markers.push({ id: markerId, color: marker.color || defaultColor, ...marker });\n                    ids.push(markerId);\n                }\n            }\n        });\n        return markers;\n    }, [])\n        .sort((a, b) => a.id.localeCompare(b.id));\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nconst MarkerDefinitions = ({ defaultColor, rfId }) => {\n    const markers = useStore(useCallback(markerSelector({ defaultColor, rfId }), [defaultColor, rfId]), \n    // the id includes all marker options, so we just need to look at that part of the marker\n    (a, b) => !(a.length !== b.length || a.some((m, i) => m.id !== b[i].id)));\n    return (jsx(\"defs\", { children: markers.map((marker) => (jsx(Marker, { id: marker.id, type: marker.type, color: marker.color, width: marker.width, height: marker.height, markerUnits: marker.markerUnits, strokeWidth: marker.strokeWidth, orient: marker.orient }, marker.id))) }));\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\n\nconst selector$4 = (s) => ({\n    nodesConnectable: s.nodesConnectable,\n    edgesFocusable: s.edgesFocusable,\n    edgesUpdatable: s.edgesUpdatable,\n    elementsSelectable: s.elementsSelectable,\n    width: s.width,\n    height: s.height,\n    connectionMode: s.connectionMode,\n    nodeInternals: s.nodeInternals,\n    onError: s.onError,\n});\nconst EdgeRenderer = ({ defaultMarkerColor, onlyRenderVisibleElements, elevateEdgesOnSelect, rfId, edgeTypes, noPanClassName, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeClick, edgeUpdaterRadius, onEdgeDoubleClick, onEdgeUpdateStart, onEdgeUpdateEnd, children, }) => {\n    const { edgesFocusable, edgesUpdatable, elementsSelectable, width, height, connectionMode, nodeInternals, onError } = useStore(selector$4, shallow);\n    const edgeTree = useVisibleEdges(onlyRenderVisibleElements, nodeInternals, elevateEdgesOnSelect);\n    if (!width) {\n        return null;\n    }\n    return (jsxs(Fragment, { children: [edgeTree.map(({ level, edges, isMaxLevel }) => (jsxs(\"svg\", { style: { zIndex: level }, width: width, height: height, className: \"react-flow__edges react-flow__container\", children: [isMaxLevel && jsx(MarkerDefinitions$1, { defaultColor: defaultMarkerColor, rfId: rfId }), jsx(\"g\", { children: edges.map((edge) => {\n                            const [sourceNodeRect, sourceHandleBounds, sourceIsValid] = getNodeData(nodeInternals.get(edge.source));\n                            const [targetNodeRect, targetHandleBounds, targetIsValid] = getNodeData(nodeInternals.get(edge.target));\n                            if (!sourceIsValid || !targetIsValid) {\n                                return null;\n                            }\n                            let edgeType = edge.type || 'default';\n                            if (!edgeTypes[edgeType]) {\n                                onError?.('011', errorMessages['error011'](edgeType));\n                                edgeType = 'default';\n                            }\n                            const EdgeComponent = edgeTypes[edgeType] || edgeTypes.default;\n                            // when connection type is loose we can define all handles as sources and connect source -> source\n                            const targetNodeHandles = connectionMode === ConnectionMode.Strict\n                                ? targetHandleBounds.target\n                                : (targetHandleBounds.target ?? []).concat(targetHandleBounds.source ?? []);\n                            const sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle);\n                            const targetHandle = getHandle(targetNodeHandles, edge.targetHandle);\n                            const sourcePosition = sourceHandle?.position || Position.Bottom;\n                            const targetPosition = targetHandle?.position || Position.Top;\n                            const isFocusable = !!(edge.focusable || (edgesFocusable && typeof edge.focusable === 'undefined'));\n                            const isUpdatable = typeof onEdgeUpdate !== 'undefined' &&\n                                (edge.updatable || (edgesUpdatable && typeof edge.updatable === 'undefined'));\n                            if (!sourceHandle || !targetHandle) {\n                                onError?.('008', errorMessages['error008'](sourceHandle, edge));\n                                return null;\n                            }\n                            const { sourceX, sourceY, targetX, targetY } = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition);\n                            return (jsx(EdgeComponent, { id: edge.id, className: cc([edge.className, noPanClassName]), type: edgeType, data: edge.data, selected: !!edge.selected, animated: !!edge.animated, hidden: !!edge.hidden, label: edge.label, labelStyle: edge.labelStyle, labelShowBg: edge.labelShowBg, labelBgStyle: edge.labelBgStyle, labelBgPadding: edge.labelBgPadding, labelBgBorderRadius: edge.labelBgBorderRadius, style: edge.style, source: edge.source, target: edge.target, sourceHandleId: edge.sourceHandle, targetHandleId: edge.targetHandle, markerEnd: edge.markerEnd, markerStart: edge.markerStart, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, elementsSelectable: elementsSelectable, onEdgeUpdate: onEdgeUpdate, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onClick: onEdgeClick, edgeUpdaterRadius: edgeUpdaterRadius, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, rfId: rfId, ariaLabel: edge.ariaLabel, isFocusable: isFocusable, isUpdatable: isUpdatable, pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined, interactionWidth: edge.interactionWidth }, edge.id));\n                        }) })] }, level))), children] }));\n};\nEdgeRenderer.displayName = 'EdgeRenderer';\nvar EdgeRenderer$1 = memo(EdgeRenderer);\n\nconst selector$3 = (s) => `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`;\nfunction Viewport({ children }) {\n    const transform = useStore(selector$3);\n    return (jsx(\"div\", { className: \"react-flow__viewport react-flow__container\", style: { transform }, children: children }));\n}\n\nfunction useOnInitHandler(onInit) {\n    const rfInstance = useReactFlow();\n    const isInitialized = useRef(false);\n    useEffect(() => {\n        if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n            setTimeout(() => onInit(rfInstance), 1);\n            isInitialized.current = true;\n        }\n    }, [onInit, rfInstance.viewportInitialized]);\n}\n\nconst oppositePosition = {\n    [Position.Left]: Position.Right,\n    [Position.Right]: Position.Left,\n    [Position.Top]: Position.Bottom,\n    [Position.Bottom]: Position.Top,\n};\nconst ConnectionLine = ({ nodeId, handleType, style, type = ConnectionLineType.Bezier, CustomComponent, connectionStatus, }) => {\n    const { fromNode, handleId, toX, toY, connectionMode } = useStore(useCallback((s) => ({\n        fromNode: s.nodeInternals.get(nodeId),\n        handleId: s.connectionHandleId,\n        toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\n        toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\n        connectionMode: s.connectionMode,\n    }), [nodeId]), shallow);\n    const fromHandleBounds = fromNode?.[internalsSymbol]?.handleBounds;\n    let handleBounds = fromHandleBounds?.[handleType];\n    if (connectionMode === ConnectionMode.Loose) {\n        handleBounds = handleBounds ? handleBounds : fromHandleBounds?.[handleType === 'source' ? 'target' : 'source'];\n    }\n    if (!fromNode || !handleBounds) {\n        return null;\n    }\n    const fromHandle = handleId ? handleBounds.find((d) => d.id === handleId) : handleBounds[0];\n    const fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : (fromNode.width ?? 0) / 2;\n    const fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : fromNode.height ?? 0;\n    const fromX = (fromNode.positionAbsolute?.x ?? 0) + fromHandleX;\n    const fromY = (fromNode.positionAbsolute?.y ?? 0) + fromHandleY;\n    const fromPosition = fromHandle?.position;\n    const toPosition = fromPosition ? oppositePosition[fromPosition] : null;\n    if (!fromPosition || !toPosition) {\n        return null;\n    }\n    if (CustomComponent) {\n        return (jsx(CustomComponent, { connectionLineType: type, connectionLineStyle: style, fromNode: fromNode, fromHandle: fromHandle, fromX: fromX, fromY: fromY, toX: toX, toY: toY, fromPosition: fromPosition, toPosition: toPosition, connectionStatus: connectionStatus }));\n    }\n    let dAttr = '';\n    const pathParams = {\n        sourceX: fromX,\n        sourceY: fromY,\n        sourcePosition: fromPosition,\n        targetX: toX,\n        targetY: toY,\n        targetPosition: toPosition,\n    };\n    if (type === ConnectionLineType.Bezier) {\n        // we assume the destination position is opposite to the source position\n        [dAttr] = getBezierPath(pathParams);\n    }\n    else if (type === ConnectionLineType.Step) {\n        [dAttr] = getSmoothStepPath({\n            ...pathParams,\n            borderRadius: 0,\n        });\n    }\n    else if (type === ConnectionLineType.SmoothStep) {\n        [dAttr] = getSmoothStepPath(pathParams);\n    }\n    else if (type === ConnectionLineType.SimpleBezier) {\n        [dAttr] = getSimpleBezierPath(pathParams);\n    }\n    else {\n        dAttr = `M${fromX},${fromY} ${toX},${toY}`;\n    }\n    return jsx(\"path\", { d: dAttr, fill: \"none\", className: \"react-flow__connection-path\", style: style });\n};\nConnectionLine.displayName = 'ConnectionLine';\nconst selector$2 = (s) => ({\n    nodeId: s.connectionNodeId,\n    handleType: s.connectionHandleType,\n    nodesConnectable: s.nodesConnectable,\n    connectionStatus: s.connectionStatus,\n    width: s.width,\n    height: s.height,\n});\nfunction ConnectionLineWrapper({ containerStyle, style, type, component }) {\n    const { nodeId, handleType, nodesConnectable, width, height, connectionStatus } = useStore(selector$2, shallow);\n    const isValid = !!(nodeId && handleType && width && nodesConnectable);\n    if (!isValid) {\n        return null;\n    }\n    return (jsx(\"svg\", { style: containerStyle, width: width, height: height, className: \"react-flow__edges react-flow__connectionline react-flow__container\", children: jsx(\"g\", { className: cc(['react-flow__connection', connectionStatus]), children: jsx(ConnectionLine, { nodeId: nodeId, handleType: handleType, style: style, type: type, CustomComponent: component, connectionStatus: connectionStatus }) }) }));\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\n    const typesKeysRef = useRef(null);\n    const store = useStoreApi();\n    const typesParsed = useMemo(() => {\n        if (process.env.NODE_ENV === 'development') {\n            const typeKeys = Object.keys(nodeOrEdgeTypes);\n            if (shallow(typesKeysRef.current, typeKeys)) {\n                store.getState().onError?.('002', errorMessages['error002']());\n            }\n            typesKeysRef.current = typeKeys;\n        }\n        return createTypes(nodeOrEdgeTypes);\n    }, [nodeOrEdgeTypes]);\n    return typesParsed;\n}\n\nconst GraphView = ({ nodeTypes, edgeTypes, onMove, onMoveStart, onMoveEnd, onInit, onNodeClick, onEdgeClick, onNodeDoubleClick, onEdgeDoubleClick, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionLineType, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, selectionKeyCode, selectionOnDrag, selectionMode, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, deleteKeyCode, onlyRenderVisibleElements, elementsSelectable, selectNodesOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, defaultMarkerColor, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, edgeUpdaterRadius, onEdgeUpdateStart, onEdgeUpdateEnd, noDragClassName, noWheelClassName, noPanClassName, elevateEdgesOnSelect, disableKeyboardA11y, nodeOrigin, nodeExtent, rfId, }) => {\n    const nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\n    const edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\n    useOnInitHandler(onInit);\n    return (jsx(FlowRenderer$1, { onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, deleteKeyCode: deleteKeyCode, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, elementsSelectable: elementsSelectable, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, onSelectionContextMenu: onSelectionContextMenu, preventScrolling: preventScrolling, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y, children: jsxs(Viewport, { children: [jsx(EdgeRenderer$1, { edgeTypes: edgeTypesWrapped, onEdgeClick: onEdgeClick, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeUpdate: onEdgeUpdate, onlyRenderVisibleElements: onlyRenderVisibleElements, onEdgeContextMenu: onEdgeContextMenu, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noPanClassName: noPanClassName, elevateEdgesOnSelect: !!elevateEdgesOnSelect, disableKeyboardA11y: disableKeyboardA11y, rfId: rfId, children: jsx(ConnectionLineWrapper, { style: connectionLineStyle, type: connectionLineType, component: connectionLineComponent, containerStyle: connectionLineContainerStyle }) }), jsx(\"div\", { className: \"react-flow__edgelabel-renderer\" }), jsx(NodeRenderer$1, { nodeTypes: nodeTypesWrapped, onNodeClick: onNodeClick, onNodeDoubleClick: onNodeDoubleClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, selectNodesOnDrag: selectNodesOnDrag, onlyRenderVisibleElements: onlyRenderVisibleElements, noPanClassName: noPanClassName, noDragClassName: noDragClassName, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent, rfId: rfId })] }) }));\n};\nGraphView.displayName = 'GraphView';\nvar GraphView$1 = memo(GraphView);\n\nconst infiniteExtent = [\n    [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],\n    [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY],\n];\nconst initialState = {\n    rfId: '1',\n    width: 0,\n    height: 0,\n    transform: [0, 0, 1],\n    nodeInternals: new Map(),\n    edges: [],\n    onNodesChange: null,\n    onEdgesChange: null,\n    hasDefaultNodes: false,\n    hasDefaultEdges: false,\n    d3Zoom: null,\n    d3Selection: null,\n    d3ZoomHandler: undefined,\n    minZoom: 0.5,\n    maxZoom: 2,\n    translateExtent: infiniteExtent,\n    nodeExtent: infiniteExtent,\n    nodesSelectionActive: false,\n    userSelectionActive: false,\n    userSelectionRect: null,\n    connectionNodeId: null,\n    connectionHandleId: null,\n    connectionHandleType: 'source',\n    connectionPosition: { x: 0, y: 0 },\n    connectionStatus: null,\n    connectionMode: ConnectionMode.Strict,\n    domNode: null,\n    paneDragging: false,\n    noPanClassName: 'nopan',\n    nodeOrigin: [0, 0],\n    snapGrid: [15, 15],\n    snapToGrid: false,\n    nodesDraggable: true,\n    nodesConnectable: true,\n    nodesFocusable: true,\n    edgesFocusable: true,\n    edgesUpdatable: true,\n    elementsSelectable: true,\n    elevateNodesOnSelect: true,\n    fitViewOnInit: false,\n    fitViewOnInitDone: false,\n    fitViewOnInitOptions: undefined,\n    multiSelectionActive: false,\n    connectionStartHandle: null,\n    connectionEndHandle: null,\n    connectionClickStartHandle: null,\n    connectOnClick: true,\n    ariaLiveMessage: '',\n    autoPanOnConnect: true,\n    autoPanOnNodeDrag: true,\n    connectionRadius: 20,\n    onError: devWarn,\n    isValidConnection: undefined,\n};\n\nconst createRFStore = () => createWithEqualityFn((set, get) => ({\n    ...initialState,\n    setNodes: (nodes) => {\n        const { nodeInternals, nodeOrigin, elevateNodesOnSelect } = get();\n        set({ nodeInternals: createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) });\n    },\n    getNodes: () => {\n        return Array.from(get().nodeInternals.values());\n    },\n    setEdges: (edges) => {\n        const { defaultEdgeOptions = {} } = get();\n        set({ edges: edges.map((e) => ({ ...defaultEdgeOptions, ...e })) });\n    },\n    setDefaultNodesAndEdges: (nodes, edges) => {\n        const hasDefaultNodes = typeof nodes !== 'undefined';\n        const hasDefaultEdges = typeof edges !== 'undefined';\n        const nodeInternals = hasDefaultNodes\n            ? createNodeInternals(nodes, new Map(), get().nodeOrigin, get().elevateNodesOnSelect)\n            : new Map();\n        const nextEdges = hasDefaultEdges ? edges : [];\n        set({ nodeInternals, edges: nextEdges, hasDefaultNodes, hasDefaultEdges });\n    },\n    updateNodeDimensions: (updates) => {\n        const { onNodesChange, nodeInternals, fitViewOnInit, fitViewOnInitDone, fitViewOnInitOptions, domNode, nodeOrigin, } = get();\n        const viewportNode = domNode?.querySelector('.react-flow__viewport');\n        if (!viewportNode) {\n            return;\n        }\n        const style = window.getComputedStyle(viewportNode);\n        const { m22: zoom } = new window.DOMMatrixReadOnly(style.transform);\n        const changes = updates.reduce((res, update) => {\n            const node = nodeInternals.get(update.id);\n            if (node) {\n                const dimensions = getDimensions(update.nodeElement);\n                const doUpdate = !!(dimensions.width &&\n                    dimensions.height &&\n                    (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\n                if (doUpdate) {\n                    nodeInternals.set(node.id, {\n                        ...node,\n                        [internalsSymbol]: {\n                            ...node[internalsSymbol],\n                            handleBounds: {\n                                source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\n                                target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin),\n                            },\n                        },\n                        ...dimensions,\n                    });\n                    res.push({\n                        id: node.id,\n                        type: 'dimensions',\n                        dimensions,\n                    });\n                }\n            }\n            return res;\n        }, []);\n        updateAbsoluteNodePositions(nodeInternals, nodeOrigin);\n        const nextFitViewOnInitDone = fitViewOnInitDone ||\n            (fitViewOnInit && !fitViewOnInitDone && fitView(get, { initial: true, ...fitViewOnInitOptions }));\n        set({ nodeInternals: new Map(nodeInternals), fitViewOnInitDone: nextFitViewOnInitDone });\n        if (changes?.length > 0) {\n            onNodesChange?.(changes);\n        }\n    },\n    updateNodePositions: (nodeDragItems, positionChanged = true, dragging = false) => {\n        const { triggerNodeChanges } = get();\n        const changes = nodeDragItems.map((node) => {\n            const change = {\n                id: node.id,\n                type: 'position',\n                dragging,\n            };\n            if (positionChanged) {\n                change.positionAbsolute = node.positionAbsolute;\n                change.position = node.position;\n            }\n            return change;\n        });\n        triggerNodeChanges(changes);\n    },\n    triggerNodeChanges: (changes) => {\n        const { onNodesChange, nodeInternals, hasDefaultNodes, nodeOrigin, getNodes, elevateNodesOnSelect } = get();\n        if (changes?.length) {\n            if (hasDefaultNodes) {\n                const nodes = applyNodeChanges(changes, getNodes());\n                const nextNodeInternals = createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect);\n                set({ nodeInternals: nextNodeInternals });\n            }\n            onNodesChange?.(changes);\n        }\n    },\n    addSelectedNodes: (selectedNodeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedNodes;\n        let changedEdges = null;\n        if (multiSelectionActive) {\n            changedNodes = selectedNodeIds.map((nodeId) => createSelectionChange(nodeId, true));\n        }\n        else {\n            changedNodes = getSelectionChanges(getNodes(), selectedNodeIds);\n            changedEdges = getSelectionChanges(edges, []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    addSelectedEdges: (selectedEdgeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedEdges;\n        let changedNodes = null;\n        if (multiSelectionActive) {\n            changedEdges = selectedEdgeIds.map((edgeId) => createSelectionChange(edgeId, true));\n        }\n        else {\n            changedEdges = getSelectionChanges(edges, selectedEdgeIds);\n            changedNodes = getSelectionChanges(getNodes(), []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    unselectNodesAndEdges: ({ nodes, edges } = {}) => {\n        const { edges: storeEdges, getNodes } = get();\n        const nodesToUnselect = nodes ? nodes : getNodes();\n        const edgesToUnselect = edges ? edges : storeEdges;\n        const changedNodes = nodesToUnselect.map((n) => {\n            n.selected = false;\n            return createSelectionChange(n.id, false);\n        });\n        const changedEdges = edgesToUnselect.map((edge) => createSelectionChange(edge.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    setMinZoom: (minZoom) => {\n        const { d3Zoom, maxZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ minZoom });\n    },\n    setMaxZoom: (maxZoom) => {\n        const { d3Zoom, minZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ maxZoom });\n    },\n    setTranslateExtent: (translateExtent) => {\n        get().d3Zoom?.translateExtent(translateExtent);\n        set({ translateExtent });\n    },\n    resetSelectedElements: () => {\n        const { edges, getNodes } = get();\n        const nodes = getNodes();\n        const nodesToUnselect = nodes\n            .filter((e) => e.selected)\n            .map((n) => createSelectionChange(n.id, false));\n        const edgesToUnselect = edges\n            .filter((e) => e.selected)\n            .map((e) => createSelectionChange(e.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes: nodesToUnselect,\n            changedEdges: edgesToUnselect,\n            get,\n            set,\n        });\n    },\n    setNodeExtent: (nodeExtent) => {\n        const { nodeInternals } = get();\n        nodeInternals.forEach((node) => {\n            node.positionAbsolute = clampPosition(node.position, nodeExtent);\n        });\n        set({\n            nodeExtent,\n            nodeInternals: new Map(nodeInternals),\n        });\n    },\n    panBy: (delta) => {\n        const { transform, width, height, d3Zoom, d3Selection, translateExtent } = get();\n        if (!d3Zoom || !d3Selection || (!delta.x && !delta.y)) {\n            return false;\n        }\n        const nextTransform = zoomIdentity\n            .translate(transform[0] + delta.x, transform[1] + delta.y)\n            .scale(transform[2]);\n        const extent = [\n            [0, 0],\n            [width, height],\n        ];\n        const constrainedTransform = d3Zoom?.constrain()(nextTransform, extent, translateExtent);\n        d3Zoom.transform(d3Selection, constrainedTransform);\n        const transformChanged = transform[0] !== constrainedTransform.x ||\n            transform[1] !== constrainedTransform.y ||\n            transform[2] !== constrainedTransform.k;\n        return transformChanged;\n    },\n    cancelConnection: () => set({\n        connectionNodeId: initialState.connectionNodeId,\n        connectionHandleId: initialState.connectionHandleId,\n        connectionHandleType: initialState.connectionHandleType,\n        connectionStatus: initialState.connectionStatus,\n        connectionStartHandle: initialState.connectionStartHandle,\n        connectionEndHandle: initialState.connectionEndHandle,\n    }),\n    reset: () => set({ ...initialState }),\n}), Object.is);\n\nconst ReactFlowProvider = ({ children }) => {\n    const storeRef = useRef(null);\n    if (!storeRef.current) {\n        storeRef.current = createRFStore();\n    }\n    return jsx(Provider$1, { value: storeRef.current, children: children });\n};\nReactFlowProvider.displayName = 'ReactFlowProvider';\n\nconst Wrapper = ({ children }) => {\n    const isWrapped = useContext(StoreContext);\n    if (isWrapped) {\n        // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n        return jsx(Fragment, { children: children });\n    }\n    return jsx(ReactFlowProvider, { children: children });\n};\nWrapper.displayName = 'ReactFlowWrapper';\n\nconst defaultNodeTypes = {\n    input: InputNode$1,\n    default: DefaultNode$1,\n    output: OutputNode$1,\n    group: GroupNode,\n};\nconst defaultEdgeTypes = {\n    default: BezierEdge,\n    straight: StraightEdge,\n    step: StepEdge,\n    smoothstep: SmoothStepEdge,\n    simplebezier: SimpleBezierEdge,\n};\nconst initNodeOrigin = [0, 0];\nconst initSnapGrid = [15, 15];\nconst initDefaultViewport = { x: 0, y: 0, zoom: 1 };\nconst wrapperStyle = {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    position: 'relative',\n    zIndex: 0,\n};\nconst ReactFlow = forwardRef(({ nodes, edges, defaultNodes, defaultEdges, className, nodeTypes = defaultNodeTypes, edgeTypes = defaultEdgeTypes, onNodeClick, onEdgeClick, onInit, onMove, onMoveStart, onMoveEnd, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onNodeDoubleClick, onNodeDragStart, onNodeDrag, onNodeDragStop, onNodesDelete, onEdgesDelete, onSelectionChange, onSelectionDragStart, onSelectionDrag, onSelectionDragStop, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionMode = ConnectionMode.Strict, connectionLineType = ConnectionLineType.Bezier, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, deleteKeyCode = 'Backspace', selectionKeyCode = 'Shift', selectionOnDrag = false, selectionMode = SelectionMode.Full, panActivationKeyCode = 'Space', multiSelectionKeyCode = isMacOs() ? 'Meta' : 'Control', zoomActivationKeyCode = isMacOs() ? 'Meta' : 'Control', snapToGrid = false, snapGrid = initSnapGrid, onlyRenderVisibleElements = false, selectNodesOnDrag = true, nodesDraggable, nodesConnectable, nodesFocusable, nodeOrigin = initNodeOrigin, edgesFocusable, edgesUpdatable, elementsSelectable, defaultViewport = initDefaultViewport, minZoom = 0.5, maxZoom = 2, translateExtent = infiniteExtent, preventScrolling = true, nodeExtent, defaultMarkerColor = '#b1b1b7', zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, panOnDrag = true, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, children, onEdgeUpdate, onEdgeContextMenu, onEdgeDoubleClick, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeUpdateStart, onEdgeUpdateEnd, edgeUpdaterRadius = 10, onNodesChange, onEdgesChange, noDragClassName = 'nodrag', noWheelClassName = 'nowheel', noPanClassName = 'nopan', fitView = false, fitViewOptions, connectOnClick = true, attributionPosition, proOptions, defaultEdgeOptions, elevateNodesOnSelect = true, elevateEdgesOnSelect = false, disableKeyboardA11y = false, autoPanOnConnect = true, autoPanOnNodeDrag = true, connectionRadius = 20, isValidConnection, onError, style, id, ...rest }, ref) => {\n    const rfId = id || '1';\n    return (jsx(\"div\", { ...rest, style: { ...style, ...wrapperStyle }, ref: ref, className: cc(['react-flow', className]), \"data-testid\": \"rf__wrapper\", id: id, children: jsxs(Wrapper, { children: [jsx(GraphView$1, { onInit: onInit, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onNodeClick: onNodeClick, onEdgeClick: onEdgeClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, onNodeDoubleClick: onNodeDoubleClick, nodeTypes: nodeTypes, edgeTypes: edgeTypes, connectionLineType: connectionLineType, connectionLineStyle: connectionLineStyle, connectionLineComponent: connectionLineComponent, connectionLineContainerStyle: connectionLineContainerStyle, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, deleteKeyCode: deleteKeyCode, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, onlyRenderVisibleElements: onlyRenderVisibleElements, selectNodesOnDrag: selectNodesOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, preventScrolling: preventScrolling, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneScroll: onPaneScroll, onPaneContextMenu: onPaneContextMenu, onSelectionContextMenu: onSelectionContextMenu, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onEdgeUpdate: onEdgeUpdate, onEdgeContextMenu: onEdgeContextMenu, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, elevateEdgesOnSelect: elevateEdgesOnSelect, rfId: rfId, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent }), jsx(StoreUpdater, { nodes: nodes, edges: edges, defaultNodes: defaultNodes, defaultEdges: defaultEdges, onConnect: onConnect, onConnectStart: onConnectStart, onConnectEnd: onConnectEnd, onClickConnectStart: onClickConnectStart, onClickConnectEnd: onClickConnectEnd, nodesDraggable: nodesDraggable, nodesConnectable: nodesConnectable, nodesFocusable: nodesFocusable, edgesFocusable: edgesFocusable, edgesUpdatable: edgesUpdatable, elementsSelectable: elementsSelectable, elevateNodesOnSelect: elevateNodesOnSelect, minZoom: minZoom, maxZoom: maxZoom, nodeExtent: nodeExtent, onNodesChange: onNodesChange, onEdgesChange: onEdgesChange, snapToGrid: snapToGrid, snapGrid: snapGrid, connectionMode: connectionMode, translateExtent: translateExtent, connectOnClick: connectOnClick, defaultEdgeOptions: defaultEdgeOptions, fitView: fitView, fitViewOptions: fitViewOptions, onNodesDelete: onNodesDelete, onEdgesDelete: onEdgesDelete, onNodeDragStart: onNodeDragStart, onNodeDrag: onNodeDrag, onNodeDragStop: onNodeDragStop, onSelectionDrag: onSelectionDrag, onSelectionDragStart: onSelectionDragStart, onSelectionDragStop: onSelectionDragStop, noPanClassName: noPanClassName, nodeOrigin: nodeOrigin, rfId: rfId, autoPanOnConnect: autoPanOnConnect, autoPanOnNodeDrag: autoPanOnNodeDrag, onError: onError, connectionRadius: connectionRadius, isValidConnection: isValidConnection }), jsx(Wrapper$1, { onSelectionChange: onSelectionChange }), children, jsx(Attribution, { proOptions: proOptions, position: attributionPosition }), jsx(A11yDescriptions, { rfId: rfId, disableKeyboardA11y: disableKeyboardA11y })] }) }));\n});\nReactFlow.displayName = 'ReactFlow';\n\nconst selector$1 = (s) => s.domNode?.querySelector('.react-flow__edgelabel-renderer');\nfunction EdgeLabelRenderer({ children }) {\n    const edgeLabelRenderer = useStore(selector$1);\n    if (!edgeLabelRenderer) {\n        return null;\n    }\n    return createPortal(children, edgeLabelRenderer);\n}\n\nfunction useUpdateNodeInternals() {\n    const store = useStoreApi();\n    return useCallback((id) => {\n        const { domNode, updateNodeDimensions } = store.getState();\n        const updateIds = Array.isArray(id) ? id : [id];\n        const updates = updateIds.reduce((res, updateId) => {\n            const nodeElement = domNode?.querySelector(`.react-flow__node[data-id=\"${updateId}\"]`);\n            if (nodeElement) {\n                res.push({ id: updateId, nodeElement, forceUpdate: true });\n            }\n            return res;\n        }, []);\n        requestAnimationFrame(() => updateNodeDimensions(updates));\n    }, []);\n}\n\nconst nodesSelector = (state) => state.getNodes();\nfunction useNodes() {\n    const nodes = useStore(nodesSelector, shallow);\n    return nodes;\n}\n\nconst edgesSelector = (state) => state.edges;\nfunction useEdges() {\n    const edges = useStore(edgesSelector, shallow);\n    return edges;\n}\n\nconst viewportSelector = (state) => ({\n    x: state.transform[0],\n    y: state.transform[1],\n    zoom: state.transform[2],\n});\nfunction useViewport() {\n    const viewport = useStore(viewportSelector, shallow);\n    return viewport;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createUseItemsState(applyChanges) {\n    return (initialItems) => {\n        const [items, setItems] = useState(initialItems);\n        const onItemsChange = useCallback((changes) => setItems((items) => applyChanges(changes, items)), []);\n        return [items, setItems, onItemsChange];\n    };\n}\nconst useNodesState = createUseItemsState(applyNodeChanges);\nconst useEdgesState = createUseItemsState(applyEdgeChanges);\n\nfunction useOnViewportChange({ onStart, onChange, onEnd }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        store.setState({ onViewportChangeStart: onStart });\n    }, [onStart]);\n    useEffect(() => {\n        store.setState({ onViewportChange: onChange });\n    }, [onChange]);\n    useEffect(() => {\n        store.setState({ onViewportChangeEnd: onEnd });\n    }, [onEnd]);\n}\n\nfunction useOnSelectionChange({ onChange }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        store.setState({ onSelectionChange: onChange });\n    }, [onChange]);\n}\n\nconst selector = (options) => (s) => {\n    if (s.nodeInternals.size === 0) {\n        return false;\n    }\n    return s\n        .getNodes()\n        .filter((n) => (options.includeHiddenNodes ? true : !n.hidden))\n        .every((n) => n[internalsSymbol]?.handleBounds !== undefined);\n};\nconst defaultOptions = {\n    includeHiddenNodes: false,\n};\nfunction useNodesInitialized(options = defaultOptions) {\n    const initialized = useStore(selector(options));\n    return initialized;\n}\n\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeLabelRenderer, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SelectionMode, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, clamp, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getNodePositionWithOrigin, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, internalsSymbol, isEdge, isNode, rectToBox, updateEdge, useEdges, useEdgesState, useGetPointerPosition, useKeyPress, useNodeId, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };\n"],"names":["StoreContext","createContext","Provider$1","Provider","errorMessages","error001","error002","error003","nodeType","error004","error005","error006","error007","id","error009","type","error008","sourceHandle","edge","targetHandle","error010","error011","edgeType","error012","zustandErrorMessage","useStore","selector","equalityFn","store","useContext","Error","useStoreApi","useMemo","getState","setState","subscribe","destroy","selector$g","s","userSelectionActive","Panel","position","children","className","style","rest","pointerEvents","positionClasses","split","jsx","Attribution","proOptions","hideAttribution","href","target","rel","EdgeText$1","memo","x","y","label","labelStyle","labelShowBg","labelBgStyle","labelBgPadding","labelBgBorderRadius","edgeRef","useRef","edgeTextBbox","setEdgeTextBbox","useState","width","height","edgeTextClasses","useEffect","current","textBbox","getBBox","jsxs","transform","visibility","rx","ry","dy","ref","getDimensions","node","offsetWidth","offsetHeight","clamp","val","min","max","Math","clampPosition","extent","calcAutoPanVelocity","value","abs","calcAutoPan","pos","bounds","getHostForElement","element","getRootNode","window","document","getBoundsOfBoxes","box1","box2","x2","y2","rectToBox","boxToRect","nodeToRect","positionAbsolute","getOverlappingArea","rectA","rectB","xOverlap","yOverlap","ceil","isRectObject","obj","isNumeric","n","isNaN","isFinite","internalsSymbol","Symbol","for","elementSelectionKeys","devWarn","message","isInputDOMNode","event","kbEvent","isReactKeyboardEvent","nativeEvent","composedPath","includes","nodeName","hasAttribute","closest","isMouseEvent","getEventPosition","isMouseTriggered","evtX","clientX","touches","evtY","clientY","left","top","isMacOs","navigator","userAgent","indexOf","BaseEdge","path","labelX","labelY","markerEnd","markerStart","interactionWidth","Fragment","d","fill","strokeOpacity","strokeWidth","displayName","getMouseHandler$1","handler","undefined","edges","find","e","getEdgeCenter","sourceX","sourceY","targetX","targetY","xOffset","centerX","yOffset","getBezierEdgeCenter","sourceControlX","sourceControlY","targetControlX","targetControlY","centerY","ConnectionMode","PanOnScrollMode","SelectionMode","ConnectionLineType","MarkerType","Position","getControl","x1","y1","Left","Right","getSimpleBezierPath","sourcePosition","Bottom","targetPosition","Top","offsetX","offsetY","SimpleBezierEdge","handleDirections","getDirection","source","distance","a","b","sqrt","pow","getSmoothStepPath","borderRadius","offset","points","center","sourceDir","targetDir","sourceGapped","targetGapped","dir","dirAccessor","currDir","sourceGapOffset","targetGapOffset","defaultCenterX","defaultCenterY","defaultOffsetX","defaultOffsetY","verticalSplit","horizontalSplit","sourceTarget","targetSource","diff","gapOffset","dirAccessorOpposite","isSameDir","sourceGtTargetOppo","sourceLtTargetOppo","sourceGapPoint","targetGapPoint","getPoints","reduce","res","p","i","segment","length","c","size","bendSize","xDir","getBend","SmoothStepEdge","pathOptions","StepEdge","props","StraightEdge","getStraightPath","calculateControlOffset","curvature","getControlWithCurvature","getBezierPath","BezierEdge","NodeIdContext","Consumer","getEdgeId","getMarkerId","marker","rfId","Object","keys","sort","map","key","join","addEdge","edgeParams","some","el","connectionExists","concat","pointToRendererPoint","tx","ty","tScale","snapToGrid","snapX","snapY","round","rendererPointToPoint","getNodePositionWithOrigin","nodeOrigin","getRectOfNodes","nodes","box","currBox","Infinity","getNodesInside","nodeInternals","rect","partially","excludeNonSelectableNodes","paneRect","visibleNodes","forEach","selectable","hidden","nodeRect","overlappingArea","dragging","push","getConnectedEdges","nodeIds","filter","getTransformForBounds","minZoom","maxZoom","padding","xZoom","yZoom","zoom","clampedZoom","getD3Transition","selection","duration","transition","getHandles","handleBounds","currentHandle","h","nodeId","nullConnection","defaultResult","handleDomNode","isValid","connection","endHandle","isValidHandle","handle","connectionMode","fromNodeId","fromHandleId","fromType","isValidConnection","doc","isTarget","handleToCheck","querySelector","result","handleType","getHandleType","handleNodeId","getAttribute","handleId","connectable","classList","contains","connectableEnd","Strict","edgeUpdaterType","resetRecentHandle","remove","getConnectionStatus","isInsideConnectionRadius","isHandleValid","connectionStatus","handlePointerDown","onConnect","onEdgeUpdateEnd","domNode","autoPanOnConnect","connectionRadius","onConnectStart","panBy","getNodes","cancelConnection","closestHandle","autoPanId","clickedHandle","elementFromPoint","containerBounds","getBoundingClientRect","prevActiveHandle","connectionPosition","autoPanStarted","handleLookup","sourceHandles","targetHandles","getHandleLookup","autoPan","xMovement","yMovement","requestAnimationFrame","onPointerMove","validHandleResult","handles","validator","handleBelow","elementsFromPoint","closestHandles","minDistance","hasValidHandle","hasTargetHandle","getClosestHandle","connectionEndHandle","add","toggle","onPointerUp","onConnectEnd","cancelAnimationFrame","removeEventListener","connectionNodeId","connectionHandleId","connectionHandleType","connectionStartHandle","addEventListener","alwaysValid","selector$f","connectOnClick","noPanClassName","Handle","forwardRef","isConnectable","isConnectableStart","isConnectableEnd","onMouseDown","onTouchStart","connecting","clickConnecting","state","startHandle","connectionClickStartHandle","clickHandle","connectingSelector","onError","onConnectExtended","params","defaultEdgeOptions","onConnectAction","hasDefaultEdges","setEdges","onPointerDown","button","connectablestart","connectableend","connectionindicator","onClick","onClickConnectStart","onClickConnectEnd","isValidConnectionStore","isValidConnectionHandler","Handle$1","DefaultNode","data","DefaultNode$1","InputNode","InputNode$1","OutputNode","OutputNode$1","GroupNode","selector$e","selectedNodes","selected","selectedEdges","selectId","areEqual","SelectionListener","onSelectionChange","changeSelector","Wrapper$1","storeHasSelectionChange","selector$d","setNodes","setDefaultNodesAndEdges","setMinZoom","setMaxZoom","setTranslateExtent","setNodeExtent","reset","useStoreUpdater","setStoreState","useDirectStoreUpdater","StoreUpdater","defaultNodes","defaultEdges","nodesDraggable","nodesConnectable","nodesFocusable","edgesFocusable","edgesUpdatable","elevateNodesOnSelect","nodeExtent","onNodesChange","onEdgesChange","elementsSelectable","snapGrid","translateExtent","fitView","fitViewOptions","onNodesDelete","onEdgesDelete","onNodeDrag","onNodeDragStart","onNodeDragStop","onSelectionDrag","onSelectionDragStart","onSelectionDragStop","autoPanOnNodeDrag","edgesWithDefaults","display","ariaLiveStyle","margin","border","overflow","clip","clipPath","ARIA_NODE_DESC_KEY","ARIA_EDGE_DESC_KEY","ARIA_LIVE_MESSAGE","selector$c","ariaLiveMessage","AriaLiveMessage","A11yDescriptions","disableKeyboardA11y","useKeyPress","keyCode","options","keyPressed","setKeyPressed","modifierPressed","pressedKeys","Set","keyCodes","keysToWatch","Array","isArray","kc","keysFlat","item","downHandler","ctrlKey","metaKey","shiftKey","keyOrCode","useKeyOrCode","code","isMatchingKey","preventDefault","upHandler","clear","delete","resetHandler","isUp","every","k","has","eventCode","calculateXYZPosition","parentNode","get","parentNodePosition","z","updateAbsoluteNodePositions","parentNodes","isParent","createNodeInternals","nextNodeInternals","Map","selectedNodeZ","zIndex","currInternals","internals","defineProperty","enumerable","set","d3Zoom","d3Selection","fitViewOnInitDone","fitViewOnInit","isInitialFitView","initial","isVisible","includeHiddenNodes","optionNode","nodesInitialized","nextTransform","translate","scale","handleControlledNodeSelectionChange","nodeChanges","change","handleControlledEdgeSelectionChange","edgeChanges","updateNodesAndEdgesSelections","changedNodes","changedEdges","hasDefaultNodes","noop","initialViewportHelper","zoomIn","zoomOut","zoomTo","getZoom","setViewport","getViewport","setCenter","fitBounds","project","viewportInitialized","selector$b","useViewportHelper","scaleBy","zoomLevel","scaleTo","nextZoom","useReactFlow","viewportHelper","useCallback","getNode","getEdges","getEdge","payload","nextNodes","nextEdges","addNodes","addEdges","toObject","viewport","deleteElements","nodesDeleted","edgesDeleted","edgeIds","nodesToRemove","parentHit","deletable","deletableEdges","initialHitEdges","connectedEdges","edgesToRemove","edgeIdsToRemove","getNodeRect","nodeOrRect","isRect","getIntersectingNodes","currNodeRect","isNodeIntersecting","area","containerStyle","eventToFlowTransform","eventTransform","isWrappedWithClass","isRightClickPan","panOnDrag","usedButton","wheelDelta","factor","deltaY","deltaMode","selector$a","d3ZoomHandler","ZoomPane","onMove","onMoveStart","onMoveEnd","onPaneContextMenu","zoomOnScroll","zoomOnPinch","panOnScroll","panOnScrollSpeed","panOnScrollMode","Free","zoomOnDoubleClick","defaultViewport","zoomActivationKeyCode","preventScrolling","noWheelClassName","timerId","isZoomingOrPanning","zoomedWithRightMouseButton","zoomPane","prevTransform","zoomActivationKeyPressed","mouseButton","isPanScrolling","panScrollTimeout","rendererNode","resizeObserver","updateDimensions","ResizeObserver","observe","unobserve","useResizeHandler","bbox","d3ZoomInstance","scaleExtent","call","updatedTransform","constrainedTransform","constrain","on","this","passive","stopImmediatePropagation","currentZoom","property","_isMacOs","point","pinchDelta","deltaNormalize","deltaX","Vertical","Horizontal","translateBy","internal","nextViewport","onViewportChangeStart","onViewportChange","onViewportChangeEnd","clearTimeout","setTimeout","sourceEvent","flowTransform","paneDragging","prevViewport","zoomScroll","pinchZoom","buttonAllowed","selector$9","userSelectionRect","UserSelection","handleParentExpand","updateItem","parent","extendWidth","extendHeight","xDiff","yDiff","applyChanges","changes","elements","initElements","currentChanges","currentChange","expandParent","dimensions","updateStyle","resizing","applyNodeChanges","createSelectionChange","getSelectionChanges","items","selectedIds","willBeSelected","wrapHandler","containerRef","selector$8","Pane","isSelecting","selectionMode","Full","onSelectionStart","onSelectionEnd","onPaneClick","onPaneScroll","onPaneMouseEnter","onPaneMouseMove","onPaneMouseLeave","container","prevSelectedNodesCount","prevSelectedEdgesCount","resetUserSelection","resetSelectedElements","nodesSelectionActive","onWheel","hasActiveSelection","onContextMenu","onMouseEnter","startX","startY","onMouseMove","mousePos","nextUserSelectRect","Partial","selectedEdgeIds","selectedNodeIds","onMouseUp","onMouseLeave","isParentSelected","hasSelector","nodeRef","matches","parentElement","getDragItems","from","values","draggable","delta","calcNextPosition","nextPosition","clampedNodeExtent","clampNodeExtent","currentExtent","parentX","parentY","parentPosition","getEventHandlerParams","dragItems","extentedDragItems","getHandleBounds","nodeElement","querySelectorAll","handlesArray","nodeBounds","nodeOffset","getMouseHandler","handleNodeClick","unselect","addSelectedNodes","unselectNodesAndEdges","multiSelectionActive","blur","wrapSelectionDragFunc","selectionFunc","_","useDrag","disabled","noDragClassName","handleSelector","isSelectable","selectNodesOnDrag","setDragging","lastPos","mousePosition","dragEvent","getPointerPosition","pointerPos","xSnapped","ySnapped","useGetPointerPosition","updateNodes","updateNodePositions","hasChange","nodesBox","adjustedNodeExtent","updatedPos","onDrag","currentNode","dragHandler","onStart","onStop","useUpdateNodePositions","xVelo","yVelo","isShiftPressed","positionDiffX","positionDiffY","arrowKeyDiffs","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","wrapNode","NodeComponent","NodeWrapper","xPos","yPos","xPosOrigin","yPosOrigin","onDoubleClick","isDraggable","isFocusable","dragHandle","initialized","ariaLabel","prevSourcePosition","prevTargetPosition","prevType","hasPointerEvents","updatePositions","onMouseEnterHandler","onMouseMoveHandler","onMouseLeaveHandler","onContextMenuHandler","onDoubleClickHandler","currNode","typeChanged","sourcePosChanged","targetPosChanged","updateNodeDimensions","forceUpdate","onKeyDown","prototype","hasOwnProperty","replace","toLowerCase","tabIndex","role","selector$7","transformString","NodesSelection$1","onSelectionContextMenu","focus","preventScroll","selector$6","FlowRenderer","deleteKeyCode","selectionKeyCode","selectionOnDrag","multiSelectionKeyCode","panActivationKeyCode","_panOnDrag","selectionKeyPressed","deleteKeyPressed","multiSelectionKeyPressed","useGlobalKeyHandler","FlowRenderer$1","createNodeTypes","nodeTypes","input","default","output","group","selector$5","NodeRenderer","onlyRenderVisible","onlyRenderVisibleElements","resizeObserverRef","observer","entries","updates","entry","disconnect","focusable","clampedPosition","posX","posY","posOrigin","origin","getPositionWithOrigin","onNodeClick","onNodeMouseEnter","onNodeMouseMove","onNodeMouseLeave","onNodeContextMenu","onNodeDoubleClick","NodeRenderer$1","shiftX","shift","shiftY","EdgeUpdaterClassName","EdgeAnchor","radius","onMouseOut","cx","cy","r","stroke","alwaysValidConnection","wrapEdge","EdgeComponent","EdgeWrapper","onEdgeDoubleClick","animated","sourceHandleId","targetHandleId","edgeUpdaterRadius","onEdgeUpdate","onEdgeUpdateStart","isUpdatable","updateHover","setUpdateHover","updating","setUpdating","markerStartUrl","markerEndUrl","onEdgeDoubleClickHandler","onEdgeContextMenu","onEdgeMouseEnter","onEdgeMouseMove","onEdgeMouseLeave","handleEdgeUpdater","isSourceHandle","evt","onEdgeUpdaterMouseEnter","onEdgeUpdaterMouseOut","inactive","addSelectedEdges","createEdgeTypes","edgeTypes","straight","bezier","step","smoothstep","simplebezier","getHandlePosition","getHandle","getNodeData","defaultEdgeTree","level","isMaxLevel","useVisibleEdges","elevateEdgesOnSelect","maxLevel","levelLookup","tree","hasZIndex","targetNode","sourceNode","edgeOrConnectedNodeSelected","selectedZIndex","edgeTree","groupEdgesByZLevel","sourcePos","targetPos","sourceWidth","sourceHeight","targetWidth","targetHeight","edgeBox","viewBox","isEdgeVisible","MarkerSymbols","Arrow","color","strokeLinecap","strokeLinejoin","ArrowClosed","Marker","markerUnits","orient","useMarkerSymbol","markerWidth","markerHeight","refX","refY","MarkerDefinitions","defaultColor","markers","ids","markerId","localeCompare","markerSelector","m","MarkerDefinitions$1","selector$4","EdgeRenderer","defaultMarkerColor","onEdgeClick","sourceNodeRect","sourceHandleBounds","sourceIsValid","targetNodeRect","targetHandleBounds","targetIsValid","targetNodeHandles","updatable","sourceHandlePos","targetHandlePos","getEdgePositions","EdgeRenderer$1","selector$3","Viewport","oppositePosition","ConnectionLine","Bezier","CustomComponent","fromNode","toX","toY","fromHandleBounds","Loose","fromHandle","fromHandleX","fromHandleY","fromX","fromY","fromPosition","toPosition","connectionLineType","connectionLineStyle","dAttr","pathParams","Step","SmoothStep","SimpleBezier","selector$2","ConnectionLineWrapper","component","useNodeOrEdgeTypes","nodeOrEdgeTypes","createTypes","GraphView","onInit","connectionLineComponent","connectionLineContainerStyle","nodeTypesWrapped","edgeTypesWrapped","rfInstance","isInitialized","useOnInitHandler","GraphView$1","infiniteExtent","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","initialState","fitViewOnInitOptions","ReactFlowProvider","storeRef","viewportNode","getComputedStyle","m22","DOMMatrixReadOnly","update","nextFitViewOnInitDone","nodeDragItems","positionChanged","triggerNodeChanges","edgeId","storeEdges","edgesToUnselect","is","Wrapper","defaultNodeTypes","defaultEdgeTypes","initNodeOrigin","initSnapGrid","initDefaultViewport","wrapperStyle","ReactFlow","attributionPosition","createUseItemsState","initialItems","setItems","onItemsChange","useNodesState","useEdgesState"],"sourceRoot":""}